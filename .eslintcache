[{"/home/pius/dev/dsa/src/index.js":"1","/home/pius/dev/dsa/src/App.js":"2","/home/pius/dev/dsa/src/reportWebVitals.js":"3","/home/pius/dev/dsa/src/views/Blog.js":"4","/home/pius/dev/dsa/src/views/About.js":"5","/home/pius/dev/dsa/src/views/Queue.js":"6","/home/pius/dev/dsa/src/views/Stack.js":"7","/home/pius/dev/dsa/src/views/List.js":"8","/home/pius/dev/dsa/src/views/Array.js":"9","/home/pius/dev/dsa/src/views/Searching_Binary.js":"10","/home/pius/dev/dsa/src/views/Sorting_algos.js":"11","/home/pius/dev/dsa/src/views/Searching_algos.js":"12","/home/pius/dev/dsa/src/components/Share.js":"13","/home/pius/dev/dsa/src/components/Main.js":"14","/home/pius/dev/dsa/src/views/PriorityQueue.js":"15","/home/pius/dev/dsa/src/components/Footer.js":"16","/home/pius/dev/dsa/src/components/Header.js":"17","/home/pius/dev/dsa/src/components/Layout.js":"18","/home/pius/dev/dsa/src/components/MainFeaturedPost.js":"19","/home/pius/dev/dsa/src/components/FeaturedPost.js":"20","/home/pius/dev/dsa/src/components/Sidebar.js":"21","/home/pius/dev/dsa/src/components/LinkedList.js":"22","/home/pius/dev/dsa/src/views/Fibonnacci.js":"23","/home/pius/dev/dsa/src/views/Factorial.js":"24","/home/pius/dev/dsa/src/assets/Share.js":"25","/home/pius/dev/dsa/src/views/Tree_impl.js":"26","/home/pius/dev/dsa/src/views/Tree.js":"27","/home/pius/dev/dsa/src/views/TreeGraph.js":"28","/home/pius/dev/dsa/src/views/config.js":"29","/home/pius/dev/dsa/src/views/BinaryTree.js":"30","/home/pius/dev/dsa/src/views/InputForm.js":"31","/home/pius/dev/dsa/src/tower/Towerr.js":"32","/home/pius/dev/dsa/src/tower/Tower.js":"33","/home/pius/dev/dsa/src/tower/Ring.js":"34","/home/pius/dev/dsa/src/components/HeaderLinks.js":"35","/home/pius/dev/dsa/src/sorting/More_Sorting.js":"36","/home/pius/dev/dsa/src/sorting/helperFunctions.ts":"37","/home/pius/dev/dsa/src/sorting/components/Header.js":"38","/home/pius/dev/dsa/src/sorting/components/DataSortingWindow.js":"39","/home/pius/dev/dsa/src/sorting/components/AlgoDescriptionContainer.js":"40","/home/pius/dev/dsa/src/sorting/components/SortingStepControls.js":"41","/home/pius/dev/dsa/src/sorting/Algorithms/selectionSort.ts":"42","/home/pius/dev/dsa/src/sorting/Algorithms/mergeSort.ts":"43","/home/pius/dev/dsa/src/sorting/Algorithms/heapSort.js":"44","/home/pius/dev/dsa/src/sorting/Algorithms/insertionSort.ts":"45","/home/pius/dev/dsa/src/sorting/Algorithms/bubbleSort.ts":"46","/home/pius/dev/dsa/src/sorting/Algorithms/quickSort.ts":"47","/home/pius/dev/dsa/src/sorting/components/ColorKeyItem.js":"48","/home/pius/dev/dsa/src/sorting/Algorithms/helperFunctions.ts":"49","/home/pius/dev/dsa/src/sorting/components/DataBar/DataBar.js":"50"},{"size":500,"mtime":1619276230000,"results":"51","hashOfConfig":"52"},{"size":710,"mtime":1620394379992,"results":"53","hashOfConfig":"52"},{"size":362,"mtime":1619276230000,"results":"54","hashOfConfig":"52"},{"size":5914,"mtime":1620392766300,"results":"55","hashOfConfig":"52"},{"size":3259,"mtime":1620454673712,"results":"56","hashOfConfig":"52"},{"size":17225,"mtime":1620456375652,"results":"57","hashOfConfig":"52"},{"size":11279,"mtime":1620388519660,"results":"58","hashOfConfig":"52"},{"size":14429,"mtime":1620455811588,"results":"59","hashOfConfig":"52"},{"size":14413,"mtime":1620456772100,"results":"60","hashOfConfig":"52"},{"size":15119,"mtime":1620388746330,"results":"61","hashOfConfig":"52"},{"size":11770,"mtime":1619276234000,"results":"62","hashOfConfig":"52"},{"size":13307,"mtime":1620456611740,"results":"63","hashOfConfig":"52"},{"size":2651,"mtime":1619276232000,"results":"64","hashOfConfig":"52"},{"size":2378,"mtime":1619276232000,"results":"65","hashOfConfig":"52"},{"size":11406,"mtime":1620456418980,"results":"66","hashOfConfig":"52"},{"size":2899,"mtime":1620395816475,"results":"67","hashOfConfig":"52"},{"size":4838,"mtime":1620395960541,"results":"68","hashOfConfig":"52"},{"size":12761,"mtime":1620456022304,"results":"69","hashOfConfig":"52"},{"size":1929,"mtime":1619276232000,"results":"70","hashOfConfig":"52"},{"size":1766,"mtime":1619276232000,"results":"71","hashOfConfig":"52"},{"size":1816,"mtime":1619276232000,"results":"72","hashOfConfig":"52"},{"size":1608,"mtime":1619276232000,"results":"73","hashOfConfig":"52"},{"size":9156,"mtime":1620456806204,"results":"74","hashOfConfig":"52"},{"size":8687,"mtime":1620456877508,"results":"75","hashOfConfig":"52"},{"size":2651,"mtime":1617878838000,"results":"76","hashOfConfig":"52"},{"size":5372,"mtime":1620456469356,"results":"77","hashOfConfig":"52"},{"size":656,"mtime":1619799456000,"results":"78","hashOfConfig":"52"},{"size":3866,"mtime":1620376054502,"results":"79","hashOfConfig":"52"},{"size":469,"mtime":1619542514000,"results":"80","hashOfConfig":"52"},{"size":3052,"mtime":1619545830000,"results":"81","hashOfConfig":"52"},{"size":3127,"mtime":1619800712000,"results":"82","hashOfConfig":"52"},{"size":4422,"mtime":1620393852244,"results":"83","hashOfConfig":"52"},{"size":428,"mtime":1620382158000,"results":"84","hashOfConfig":"52"},{"size":316,"mtime":1620381958000,"results":"85","hashOfConfig":"52"},{"size":3807,"mtime":1620393530022,"results":"86","hashOfConfig":"52"},{"size":11215,"mtime":1620395557839,"results":"87","hashOfConfig":"52"},{"size":2769,"mtime":1617829032000,"results":"88","hashOfConfig":"52"},{"size":6775,"mtime":1620330012000,"results":"89","hashOfConfig":"52"},{"size":2750,"mtime":1617829032000,"results":"90","hashOfConfig":"52"},{"size":2265,"mtime":1617829032000,"results":"91","hashOfConfig":"52"},{"size":4615,"mtime":1617829032000,"results":"92","hashOfConfig":"52"},{"size":2269,"mtime":1620453147032,"results":"93","hashOfConfig":"52"},{"size":4454,"mtime":1620453128244,"results":"94","hashOfConfig":"52"},{"size":265,"mtime":1617829032000,"results":"95","hashOfConfig":"52"},{"size":1975,"mtime":1620453114448,"results":"96","hashOfConfig":"52"},{"size":2839,"mtime":1620453089636,"results":"97","hashOfConfig":"52"},{"size":4163,"mtime":1620453137408,"results":"98","hashOfConfig":"52"},{"size":757,"mtime":1617829032000,"results":"99","hashOfConfig":"52"},{"size":2770,"mtime":1620453228588,"results":"100","hashOfConfig":"52"},{"size":1288,"mtime":1617829032000,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"7s51s2",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"104"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"/home/pius/dev/dsa/src/index.js",[],["225","226"],"/home/pius/dev/dsa/src/App.js",[],"/home/pius/dev/dsa/src/reportWebVitals.js",[],"/home/pius/dev/dsa/src/views/Blog.js",["227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261"],"import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Header from '../components/Header';\nimport Input from '@material-ui/core/Input';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Footer from '../components/Footer';\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Chip from '@material-ui/core/Chip';\n\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Stack_ from '../assets/stack.png'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { Paper } from '@material-ui/core';\nimport Share from '../assets/Share.js';\nimport Popper from '@material-ui/core/Popper';\n\nimport Layout from \"../components/Layout\";\nimport Stack_DS from './Stack.js';\nimport Queue_DS from './Queue.js';\nimport PriorityQueue from './PriorityQueue';\nimport List from './List.js';\nimport Array_ from './Array.js';\nimport Alogs from './Searching_algos.js'\nimport Searching_Binary from './Searching_Binary.js'\nimport Sorting from './Sorting_algos.js'\nimport Fibonnacci from './Fibonnacci.js'\nimport Factorial from './Factorial.js'\nimport Tree_impl from './Tree_impl.js'\n\n\nimport '../components/style.css'; \n;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n   gridSubsection: {\n    marginBottom: theme.spacing(1),\n  },\n  inputSmall:{\n    fontSize: '13px',\n    color: '#1b1f23',\n    border: '1px solid #cfd7de',\n    borderRadius: '5px',\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    \"&::after\": {\n        borderBottom: '1px solid #949494',\n    },\n  },\n  formLabel:{\n    fontSize: '13px',\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontWeight: '600',\n    marginBottom: theme.spacing(1),\n  },\n button: {\n    backgroundColor: red[500],\n    float: 'left',\n    margin: theme.spacing(2, 2, 1, 'auto'),\n  },\n  root_: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(0),\n    },\n  },\n   paper: {\n    padding: theme.spacing(2),\n  }\n}));\n\n\nexport default function Blog() {\n  const classes = useStyles();\n\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\" \n     // className='header'\n      >\n        <Header title=\"DataCode\" />\n           <br/>\n           <br/>\n           <br/>\n       \n          <Grid   container spacing={1}> \n\n             <Grid item xs={12} sm={6} md={4}>  \n               <Stack_DS />\n             </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n               <Queue_DS />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n               <PriorityQueue />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <List />\n              </Grid> \n               <Grid item xs={12} sm={6} md={4}>\n                <Array_ />\n              </Grid> \n               <Grid item xs={12} sm={6} md={4}>\n                <Alogs />\n              </Grid> \n              <Grid item xs={12} sm={6} md={4}>\n                <Searching_Binary />\n              </Grid> \n               <Grid item xs={12} sm={6} md={4}>\n                <Sorting />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <Layout />\n              </Grid> \n              <Grid item xs={12} sm={6} md={4}>\n                <Fibonnacci />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <Factorial />\n              </Grid>\n              <Grid item xs={12} sm={6} md={4}>\n                <Tree_impl  />\n              </Grid> \n\n              \n          </Grid>\n            \n           </Container>\n           <br/>\n           <br/>\n           <br/>\n           <br/>\n           <br/>\n           <br/>\n           <br/>\n           <br/>\n           <br/>\n           <br/>\n           <br/>\n           <br/>\n            <Footer\n              title=\"DataCode\"\n              description=\"Implementing data structures and algorithms\"\n            />\n    </React.Fragment>\n  );\n}\n\n\n// class AppointmentFormContainerBasic extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       appointmentChanges: {},\n//       start_time: \"\",\n//       end_time: \"\",\n//       notes: \"\",\n//       start_date: \"\",\n//       end_date: \"\",\n\n//       start_date_edit: \"\",\n//       end_date_edit: \"\",\n//       start_time_edit: \"\",\n//       end_time_edit: \"\",\n//       notes_edit: \"\",\n//     };\n    \n//   render() {\n//     return (\n     \n//     );\n//   }\n//   ","/home/pius/dev/dsa/src/views/About.js",["262","263"],"import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n//import GitHubIcon from '@material-ui/icons/GitHub';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport Header from '../components/Header';\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\nimport MainFeaturedPost from '../components/MainFeaturedPost';\nimport FeaturedPost from '../components/FeaturedPost';\nimport Main from '../components/Main.js';\nimport Sidebar from '../components/Sidebar';\nimport Footer from '../components/Footer';\nimport image1 from '../assets/homepage/pius.jpg'\nimport image2 from '../assets/homepage/maria.jpg'\n\nimport image4 from '../assets/homepage/sem.jpg'\nimport image6 from '../assets/homepage/calvin.jpg'\nimport image8 from '../assets/homepage/jona.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  mainGrid: {\n    marginTop: theme.spacing(5),\n    marginRight: theme.spacing(25),\n    marginLeft: theme.spacing(30),\n  },\n}));\n\nconst mainFeaturedPost = {\n  title: 'About Datacode' ,\n  description:\n    \"This a hands on approach to implement the various data structures and algorithms visually in the frontend\",\n  imageText: 'main image description',\n};\n\nconst featuredPosts = [\n  {\n    title: 'Pius Tumwebaze',\n    date: 'Nov 12',\n    description:\n      \"Lead developer for Datacode\",\n     image: image1,\n    imageText: 'Image Text',\n  },\n  {\n    title: 'Balunga Mariam',\n    date: 'Nov 11',\n    description:\n      \"Group leader and coodinator\",\n    image: image2,\n    imageText: 'Image Text',\n  },\n];\nconst posts = [\n  {\n    title: 'Kiggundu Jonathan',\n    description:\"UI designer for Datacode\",\n     image: image8,\n    imageText: 'Image Text',\n  },\n  {\n    title: 'Ssemugga Ronald',\n    description:\"developer\",\n    image: image4,\n    imageText: 'Image Text',\n  },\n  {\n    title: 'Katatina Calvin',\n    description:\"ux designer\",\n    image: image6,\n    imageText: 'Image Text',\n  },\n];\nconst sidebar = {\n  title: 'About',\n  description:\n    \"Tomorrow Solution Malawi welcomes you. We are an Agricultural organisation aiming at educating and rescuing people as well as carrying out farm activites\",\n  social: [\n    { name: 'Whatsapp', icon: WhatsAppIcon },\n    { name: 'Twitter', icon: TwitterIcon },\n    { name: 'Facebook', icon: FacebookIcon },\n  ],\n};\n\nexport default function Blog() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Header title=\"DataCode\" />\n        <main>\n          <MainFeaturedPost post={mainFeaturedPost} />\n          <Grid container spacing={1}>\n            {featuredPosts.map((post) => (\n              <FeaturedPost key={post.title} post={post} />\n            ))}\n          </Grid>\n          <Grid container spacing={-1} className={classes.mainGrid}>\n            <Main title=\"Recent From TSM\" posts={posts} />\n          </Grid>\n        </main>\n      </Container>\n      <Footer\n        title=\"DataCode\"\n        description=\"Implementng data structures and algoriithm\"\n      />\n    </React.Fragment>\n  );\n}\n ","/home/pius/dev/dsa/src/views/Queue.js",["264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279"],"import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n// import Header from '../components/Header';\nimport Input from '@material-ui/core/Input';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Chip from '@material-ui/core/Chip';\n\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Queue_ from '../assets/queue.gif'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { Paper } from '@material-ui/core';\nimport Share from '../assets/Share.js';\nimport Popper from '@material-ui/core/Popper';\n\n// import Stack_DS from './Stack.js';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '68.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n   gridSubsection: {\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2),\n  },\n  inputSmall:{\n    fontSize: '13px',\n    color: '#1b1f23',\n    border: '1px solid #cfd7de',\n    borderRadius: '5px',\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    \"&::after\": {\n        borderBottom: '1px solid #949494',\n    },\n  },\n  formLabel:{\n    fontSize: '13px',\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontWeight: '600',\n    marginBottom: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  },\n button: {\n    backgroundColor: red[500],\n    float: 'left',\n    margin: theme.spacing(2, 2, 1, 'auto'),\n  },\n  root_: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(0),\n    },\n  },\n   paper: {\n    padding: theme.spacing(2),\n  }\n}));\n\n\nexport default function Blog() {\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  // const [ firstName, setFirstName ] = useState(\"\");\n\n  class Stack {\n    constructor() {\n      this._storage = [];\n      this._length = 0; // this is our length \n    }\n\n    push(value) {\n      // so add the value to the top of our stack\n      this._storage[this._length] = value;\n      // since we added a value, we should also increase the length by 1\n      this._length++;\n    }\n    /// .....\n  }  \n\n  const [ user_value, setValue ] = React.useState(\"\");\n  const [ stack_def, setStack ] = React.useState(JSON.parse(localStorage.getItem('data_q')));\n  const [ first, setFirst ] = React.useState(false);\n  const [ added, setAdded ] = React.useState(false);\n  const [ popped, setPopped ] = React.useState(false);\n  const [ notification, setNotification ] = React.useState(false);\n  const [ retrieve, setRetrieve ] = React.useState(false);\n  const [ stack_size, setStack_size ] = React.useState(\"\");\n  const [ is_empt, setIs_Empty ] = React.useState(false);\n  const [ is_empt_, setIs_Empty_ ] = React.useState(false);\n \n\n\n  var stack_;\n  stack_ = new Stack();\n\n  const push = (e) => {\n    var new_data = user_value;\n\n    if(localStorage.getItem('data_q') == null){\n      localStorage.setItem('data_q', \"[]\");\n    }\n\n    var old_data = JSON.parse(localStorage.getItem('data_q'));\n    // checking if value is of the same data type\n    console.log(typeof new_data)\n\n\n    old_data.push(new_data);\n    setNotification(true);\n    setValue(\"\")\n    setAdded(true);\n    setPopped(false);\n     setRetrieve(false);\n    setStack_size(null)\n    setIs_Empty(false);\n    setIs_Empty_(false);\n\n    localStorage.setItem('data_q', JSON.stringify(old_data));\n    console.log(old_data)\n  }\n\n\n  const pop = (e) => {\n\n    if(localStorage.getItem('data_q') == null){\n      localStorage.setItem('data_q', \"[]\");\n    }\n\n    var old_data = JSON.parse(localStorage.getItem('data_q'));\n    if(old_data.length === 0){\n    \treturn false\n    }\n    var new_data = user_value;\n\n    old_data.splice(0, 1); // removes element to first be added\n    setNotification(true);\n    setValue(\"\")\n    setAdded(false);\n    setPopped(true);\n    setRetrieve(false);\n    setStack_size(null)\n    setIs_Empty(false);\n    setIs_Empty_(false);\n\n    localStorage.setItem('data_q', JSON.stringify(old_data));\n    console.log(old_data)\n  }\n\n   const render_array = (e) => {\n    setRetrieve(true);\n    // setPeek(null);\n    setStack_size(null)\n    setIs_Empty(false);\n    setIs_Empty_(false);\n  }\n\n  const sizing = (e) => {\n    var old_data = JSON.parse(localStorage.getItem('data_q'));\n    setRetrieve(false);\n    if(old_data){\n       setStack_size(old_data.length)\n    }\n    setIs_Empty(false);\n    setIs_Empty_(false);\n   \n  }\n\n   const is_empty = (e) => {\n    var old_data = JSON.parse(localStorage.getItem('data_q'))\n    console.log(old_data)\n    setRetrieve(false);\n    setStack_size(null)\n    if(old_data === null || old_data.length === 0){\n      setIs_Empty(true)\n      console.log(old_data)\n    }else{\n      setIs_Empty_(true)\n    }\n  }\n\n   React.useEffect(() => {\n    localStorage.removeItem('data_q')\n  }, [])\n  \n\n\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n  const stack_video_link = \"https://www.youtube.com/watch?v=zp6pBNbUB2U\"\n\n\n  return (\n    <React.Fragment>\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            S\n          </Avatar>\n        }\n        // action={\n        //   <IconButton aria-label=\"settings\">\n        //     <MoreVertIcon />\n        //   </IconButton>\n        // }\n        title=\"Queue Data structure\"\n        subheader=\"Methods: enqueue(), dequeue(), gethead()  Principle: FIFO (First In First Out)\"\n      />\n      <CardMedia\n        className={classes.media}\n        image={Queue_}\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          A queue is a homogeneous collection of elements in which deletions can only take place at the front end, known as dequeue and insertions can take place only at the rear end. FIFO\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n\n          <LinkIcon onClick={handleClick} />\n          <Popper id={id} open={open} anchorEl={anchorEl}>\n            <Paper className={classes.paper}>\n             <Share \n               stack_video_link={stack_video_link}/>\n            </Paper> \n          </Popper>\n\n        </IconButton>\n        {/*<IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>*/}\n        <Button \n            variant=\"outlined\" \n            onClick={handleExpandClick}  \n            style={{ 'marginLeft': '100px', 'fontSize' : '10px'}}\n            color=\"primary\">\n            Try it out\n        </Button>\n       \n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n                <Grid item xs={12}>\n               <Grid item xs={8}>\n                  <Collapse in={notification}>\n                        <Alert\n                          severity=\"info\"\n                          icon={false}\n                          action={\n                            <IconButton\n                              aria-label=\"close\"\n                              color=\"inherit\"\n                              size=\"small\"\n                              onClick={() => {\n                                setNotification(false);\n                              }}\n                            >\n                              <CloseIcon fontSize=\"inherit\" />\n                            </IconButton>\n                          }\n                        >\n                          {\n                            added ? (<span>{\"Enqeued \"}</span>):(\"\")\n                          }\n                          {\n                            popped ? (<span>{\"Dequeued \"}</span>):(\"\")\n                          }\n                        </Alert>\n                    </Collapse>\n                </Grid>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n                <Grid item xs={8}>\n                  <FormLabel component=\"label\" className={classes.formLabel}>Add value</FormLabel>\n                  <Input\n                    className={classes.inputSmall}\n                    fullWidth\n                    placeholder=\"Add value\"\n                    disableUnderline\n                    name=\"value\"\n                    autoComplete=\"add-value\"\n                    onChange={(e) => {\n                      setValue(e.target.value)\n                    }}\n                    value={user_value}\n                    required\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n\n             <Button\n              variant=\"contained\"\n              //disabled={disabl_}\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={push}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"Enqeue\"}</span>\n            </Button>\n            <Button\n              variant=\"contained\"\n              //disabled={disabl_}\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={pop}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"Denqeue\"}</span>\n            </Button>\n            <Button\n                variant=\"contained\"\n                //disabled={disabl_}\n                color=\"secondary\"\n                style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n                onClick={render_array}\n                className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"retrieve\"}</span>\n            </Button>\n            <Button\n                variant=\"contained\"\n                //disabled={disabl_}\n                color=\"secondary\"\n                style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n                onClick={sizing}\n                className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"size\"}</span>\n            </Button>\n             <Button\n                variant=\"contained\"\n                //disabled={disabl_}\n                color=\"secondary\"\n                style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n                onClick={is_empty}\n                className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"isEmpty\"}</span>\n            </Button>\n          \n             <Grid item xs={12}>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n               \n                  {\n                    retrieve === true ? \n                    (\n                      <div>\n                        <Grid\n                          container\n                          spacing={2}\n                          className={classes.gridSubsection}\n                        >\n                         \n                            {\n                              JSON.parse(localStorage.getItem('data_q')) ? (\n                                <div>\n                                     {JSON.parse(localStorage.getItem('data_q')).map((value) => (\n                                           <Button variant=\"outlined\" color=\"primary\">\n                                             {value}\n                                          </Button>\n                                 )).reverse()}\n                                </div>):(\"\")\n                             }\n                        </Grid>\n                      </div>\n                    ) \n                    : null\n                  }\n                  {\n                    stack_size ? \n                    (\n                      <div>\n                        <Grid\n                          container\n                          spacing={2}\n                          className={classes.gridSubsection}\n                        >\n                        <FormLabel style={{ 'marginTop' : '10px' }} component=\"label\" className={classes.formLabel}>Size of Queue</FormLabel>\n                         <br />\n                         <br />\n                          <div className={classes.root_}>\n                            <ButtonGroup\n                              orientation=\"vertical\"\n                              color=\"primary\"\n                              aria-label=\"vertical outlined primary button group\"\n                            >\n                               <Button style={{ 'marginLeft' : '10px' }} variant=\"outlined\" color=\"primary\">\n                                 {stack_size}\n                              </Button>\n                            </ButtonGroup>\n                          </div>\n                        </Grid>\n                      </div>\n                    ) \n                    : null\n                 }\n                  {\n                    is_empt === true ? \n                    (\n                      <div>\n                        <Grid\n                          container\n                          spacing={2}\n                          className={classes.gridSubsection}\n                        >\n                        <FormLabel style={{ 'marginTop' : '10px' }} component=\"label\" className={classes.formLabel}>Queue is empty: </FormLabel>\n                         <br />\n                         <br />\n                          <div className={classes.root_}>\n                            <ButtonGroup\n                              orientation=\"vertical\"\n                              color=\"primary\"\n                              aria-label=\"vertical outlined primary button group\"\n                            >\n                               <Button style={{ 'marginLeft' : '10px' }} variant=\"outlined\" color=\"primary\">\n                                 {\"True\"}\n                              </Button>\n                            </ButtonGroup>\n                          </div>\n                        </Grid>\n                      </div>\n                    ) \n                    : null\n                 }\n                  {\n                    is_empt_ === true ? \n                    (\n                      <div>\n                        <Grid\n                          container\n                          spacing={2}\n                          className={classes.gridSubsection}\n                        >\n                        <FormLabel style={{ 'marginTop' : '10px' }} component=\"label\" className={classes.formLabel}>Queue is empty: </FormLabel>\n                         <br />\n                         <br />\n                          <div className={classes.root_}>\n                            <ButtonGroup\n                              orientation=\"vertical\"\n                              color=\"primary\"\n                              aria-label=\"vertical outlined primary button group\"\n                            >\n                               <Button style={{ 'marginLeft' : '10px' }} variant=\"outlined\" color=\"primary\">\n                                 {\"False\"}\n                              </Button>\n                            </ButtonGroup>\n                          </div>\n                        </Grid>\n                      </div>\n                    ) \n                    : null\n                 }\n\n              </Grid>\n            </Grid>\n        </CardContent>\n      </Collapse>\n    </Card>         \n    </React.Fragment>\n  );\n}\n","/home/pius/dev/dsa/src/views/Stack.js",["280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297"],"import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Header from '../components/Header';\nimport Input from '@material-ui/core/Input';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Footer from '../components/Footer';\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Chip from '@material-ui/core/Chip';\n\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Stack_ from '../assets/stack1.gif'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { Paper } from '@material-ui/core';\nimport Share from '../components/Share.js';\nimport Popper from '@material-ui/core/Popper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '68.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n   gridSubsection: {\n    marginBottom: theme.spacing(1),\n  },\n  inputSmall:{\n    fontSize: '13px',\n    color: '#1b1f23',\n    border: '1px solid #cfd7de',\n    borderRadius: '5px',\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    \"&::after\": {\n        borderBottom: '1px solid #949494',\n    },\n  },\n  formLabel:{\n    fontSize: '13px',\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontWeight: '600',\n    marginBottom: theme.spacing(1),\n  },\n button: {\n    backgroundColor: red[500],\n    float: 'left',\n    margin: theme.spacing(2, 2, 1, 'auto'),\n  },\n  root_: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(0),\n    },\n  },\n   paper: {\n    padding: theme.spacing(2),\n  }\n}));\n\n\nexport default function Blog() {\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  // const [ firstName, setFirstName ] = useState(\"\");\n\n  class Stack {\n    constructor() {\n      this._storage = [];\n      this._length = 0; // this is our length \n    }\n\n    push(value) {\n      // so add the value to the top of our stack\n      this._storage[this._length] = value;\n      // since we added a value, we should also increase the length by 1\n      this._length++;\n    }\n    /// .....\n  }  \n\n  const [ user_value, setValue ] = React.useState(\"\");\n  const [ stack_def, setStack ] = React.useState(JSON.parse(localStorage.getItem('data_s')));\n  const [ first, setFirst ] = React.useState(false);\n  const [ added, setAdded ] = React.useState(false);\n  const [ popped, setPopped ] = React.useState(false);\n  const [ notification, setNotification ] = React.useState(false);\n\n\n  var stack_;\n  stack_ = new Stack();\n\n  const push = (e) => {\n    var new_data = user_value;\n\n    if(localStorage.getItem('data_s') == null){\n      localStorage.setItem('data_s', \"[]\");\n    }\n\n    var old_data = JSON.parse(localStorage.getItem('data_s'));\n    // checking if value is of the same data type\n   \n   //  pius zone \n   // ===========\n    var i = 0;\n    const array = [];\n    for(i = 0; i < old_data.length; i++){\n      console.log(old_data[i])\n      array.push(parseFloat(old_data[i]))\n    }\n    // const age = parseFloat(age_);\n    console.log(old_data)\n    console.log(array)\n\n\n\n\n    old_data.push(new_data);\n    setNotification(true);\n    setValue(\"\")\n    setAdded(true);\n    setPopped(false);;\n\n    localStorage.setItem('data_s', JSON.stringify(old_data));\n    console.log(old_data)\n  }\n\n\n  const pop = (e) => {\n   // var new_data = document.getElementbyId('input').value;\n    var new_data = user_value;\n\n    if(localStorage.getItem('data_s') == null){\n      localStorage.setItem('data_s', \"[]\");\n    }\n\n    var old_data = JSON.parse(localStorage.getItem('data_s'));\n    old_data.pop(new_data);\n    setNotification(true);\n    setValue(\"\")\n    setAdded(false);\n    setPopped(true);\n\n    localStorage.setItem('data_s', JSON.stringify(old_data));\n    console.log(old_data)\n  }\n\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n  const stack_video_link = \"https://www.youtube.com/watch?v=CgFVgp_VCN8\"\n\n\n  return (\n    <React.Fragment>\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            S\n          </Avatar>\n        }\n        // action={\n        //   <IconButton aria-label=\"settings\">\n        //     <MoreVertIcon />\n        //   </IconButton>\n        // }\n        title=\"Stack Data structure\"\n        subheader=\"Methods: push(), pop()  Principle: LIFO (Last In First Out\"\n      />\n      <CardMedia\n        className={classes.media}\n        image={Stack_}\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        Stack is a linear data structure which follows a particular order in\n         which the operations are performed. The order may be LIFO(Last In First Out)\n          or FILO(First In Last Out). There are many real-life examples of a stack. \n        Consider an example of plates stacked over one another in the canteen\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n\n          <LinkIcon onClick={handleClick} />\n          <Popper id={id} open={open} anchorEl={anchorEl}>\n            <Paper className={classes.paper}>\n             <Share \n               stack_video_link={stack_video_link}/>\n            </Paper> \n          </Popper>\n\n        </IconButton>\n        {/*<IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>*/}\n        <Button \n            variant=\"outlined\" \n            onClick={handleExpandClick}  \n            style={{ 'marginLeft': '150px', 'fontSize' : '10px'}}\n            color=\"primary\">\n            Try it out\n        </Button>\n       \n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n                <Grid item xs={12}>\n               <Grid item xs={8}>\n                  <Collapse in={notification}>\n                        <Alert\n                          severity=\"info\"\n                          icon={false}\n                          action={\n                            <IconButton\n                              aria-label=\"close\"\n                              color=\"inherit\"\n                              size=\"small\"\n                              onClick={() => {\n                                setNotification(false);\n                              }}\n                            >\n                              <CloseIcon fontSize=\"inherit\" />\n                            </IconButton>\n                          }\n                        >\n                          {\n                            added ? (<span>{\"pushed to stack\"}</span>):(\"\")\n                          }\n                          {\n                            popped ? (<span>{\"popped from stack\"}</span>):(\"\")\n                          }\n                        </Alert>\n                    </Collapse>\n                </Grid>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n                <Grid item xs={8}>\n                  <FormLabel component=\"label\" className={classes.formLabel}>Add value</FormLabel>\n                  <Input\n                    className={classes.inputSmall}\n                    fullWidth\n                    placeholder=\"Add value\"\n                    disableUnderline\n                    name=\"value\"\n                    autoComplete=\"add-value\"\n                    onChange={(e) => {\n                      setValue(e.target.value)\n                    }}\n                    value={user_value}\n                    required\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n\n             <Button\n              variant=\"contained\"\n              //disabled={disabl_}\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={push}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"push\"}</span>\n            </Button>\n            <Button\n              variant=\"contained\"\n              //disabled={disabl_}\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={pop}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"pop\"}</span>\n            </Button>\n          \n             <Grid item xs={12}>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n               \n                 {\n                  JSON.parse(localStorage.getItem('data_s')) ? (\n                    <div>\n                         {JSON.parse(localStorage.getItem('data_s')).map((value) => (\n                           <div className={classes.root_}>\n                            <ButtonGroup\n                              orientation=\"vertical\"\n                              color=\"primary\"\n                              aria-label=\"vertical outlined primary button group\"\n                            >\n                               <Button variant=\"outlined\" color=\"primary\">\n                                 {value}\n                              </Button>\n                            </ButtonGroup>\n                          </div>\n                     )).reverse()}\n                    </div>):(\"\")\n                 }\n              </Grid>\n            </Grid>\n        </CardContent>\n      </Collapse>\n    </Card>\n</React.Fragment>\n  );\n}\n\n","/home/pius/dev/dsa/src/views/List.js",["298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321"],"import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Header from '../components/Header';\nimport Input from '@material-ui/core/Input';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Footer from '../components/Footer';\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Chip from '@material-ui/core/Chip';\n\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport List_ from '../assets/list1.png'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { Paper } from '@material-ui/core';\nimport Share from '../components/Share.js';\nimport Popper from '@material-ui/core/Popper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '61.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n   gridSubsection: {\n    marginBottom: theme.spacing(1),\n  },\n  inputSmall:{\n    fontSize: '13px',\n    color: '#1b1f23',\n    border: '1px solid #cfd7de',\n    borderRadius: '5px',\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    \"&::after\": {\n        borderBottom: '1px solid #949494',\n    },\n  },\n  formLabel:{\n    fontSize: '13px',\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontWeight: '600',\n    marginBottom: theme.spacing(1),\n  },\n button: {\n    backgroundColor: red[500],\n    float: 'left',\n    margin: theme.spacing(2, 2, 1, 'auto'),\n  },\n  root_: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(0),\n    },\n  },\n   paper: {\n    padding: theme.spacing(2),\n  }\n}));\n\n\nexport default function Blog() {\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  // const [ firstName, setFirstName ] = useState(\"\");\n\n  class List {\n    constructor() {\n      this._storage = [];\n      this._length = 0; // this is our length \n    }\n\n    push(value) {\n      // so add the value to the top of our stack\n      this._storage[this._length] = value;\n      // since we added a value, we should also increase the length by 1\n      this._length++;\n    }\n    /// .....\n  }  \n\n  const [ user_value, setValue ] = React.useState(\"\");\n  const [ stack_def, setStack ] = React.useState(JSON.parse(localStorage.getItem('data_s')));\n  const [ first, setFirst ] = React.useState(false);\n  const [ added, setAdded ] = React.useState(false);\n  const [ popped, setPopped ] = React.useState(false);\n  const [ notification, setNotification ] = React.useState(false);\n\n\n  var list_;\n  list_ = new List();\n\n  const push = (e) => {\n    var new_data = user_value;\n\n    if(localStorage.getItem('data_l') == null){\n      localStorage.setItem('data_l', \"[]\");\n    }\n\n    var old_data = JSON.parse(localStorage.getItem('data_l'));\n    // checking if value is of the same data type\n\n    // const age = parseFloat(age_);\n    \n   \n    old_data.push(new_data);\n\n\n    const array = [];\n    for(var i = 0; i < old_data.length; i++){\n      console.log(old_data[i])\n      array.push(parseFloat(old_data[i]))\n    }\n    console.log(array)\n    // linearSearch(array,2)\n    // console.log(binarySearch(array,2,0,array.length-1))\n    // console.log(selectionSort(array))\n    console.log(mergeSort(array));\n    var sortedArray = quickSort(array, 0, array.length - 1);\n    console.log(sortedArray);\n\n    setNotification(true);\n    setValue(\"\")\n    setAdded(true);\n    setPopped(false);;\n\n    localStorage.setItem('data_l', JSON.stringify(old_data));\n    console.log(old_data)\n    return array\n  }\n\n  // React.useEffect(() => {\n  // //   const linearSearch = (list, item) => {\n  // //     for (const [i, element] of list.entries()) {\n  // //       if (element === item) {\n    \n  // //         console.log(i)\n  // //       }\n  // //     }\n  // //   }    \n  // //  linearSearch(push())\n  // }, [])\n  \n  const linearSearch = (list, item) => {\n    for (var i=0;i<list.length; i++) {\n      if (list[i] === item) {\n  \n        console.log(i)\n      }\n    }\n  }  \n\n  let binarySearch = function (arr, x, start, end) {\n       \n    // Base Condition\n    if (start > end) return false;\n   \n    // Find the middle index\n    let mid=Math.floor((start + end)/2);\n   \n    // Compare mid with given key x\n    if (arr[mid]===x) return mid;\n          \n    // If element at mid is greater than x,\n    // search in the left half of mid\n    if(arr[mid] > x) \n        return binarySearch(arr, x, start, mid-1);\n    else\n  \n        // If element at mid is smaller than x,\n        // search in the right half of mid\n        return binarySearch(arr, x, mid+1, end);\n}\n\nfunction selectionSort(arr){    \n\n  for(var i= 0; i < arr.length; ++i){\n      var min = i;\n      for (var j = i; j < arr.length; ++j){\n          if (arr[min] > arr[j]){\n          min = j;\n          }\n      }\n  \n  var temp = arr[min];\n  arr[min] = arr[i];\n  arr[i] = temp;  \n  \n  }\n  return arr;\n  \n  }\n\n  function insertionSort(arr){\n    for(var i=1;i<arr.length;i++){\n        var value = arr[i];\n        var j=i;\n        while(j>0 && arr[j-1] < value){\n            arr[j] = arr[j-1];\n            j-=1;\n        }\n        arr[j] = value;\n    \n    }\n    return arr;\n    }\n\n    const merge = (arr1, arr2) => {\n      let sorted = [];\n    \n      while (arr1.length && arr2.length) {\n        if (arr1[0] < arr2[0]) sorted.push(arr1.shift());\n        else sorted.push(arr2.shift());\n      };\n    \n      return sorted.concat(arr1.slice().concat(arr2.slice()));\n    };\n    \n    const mergeSort = arr => {\n      if (arr.length <= 1) return arr;\n      let mid = Math.floor(arr.length / 2),\n          left = mergeSort(arr.slice(0, mid)),\n          right = mergeSort(arr.slice(mid));\n    \n      return merge(left, right); \n    };\n\n  //quicksort algorithm\n\n  var items = [5,3,7,6,2,9];\nfunction swap(items, leftIndex, rightIndex){\n    var temp = items[leftIndex];\n    items[leftIndex] = items[rightIndex];\n    items[rightIndex] = temp;\n}\nfunction partition(items, left, right) {\n    var pivot   = items[Math.floor((right + left) / 2)], //middle element\n        i       = left, //left pointer\n        j       = right; //right pointer\n    while (i <= j) {\n        while (items[i] < pivot) {\n            i++;\n        }\n        while (items[j] > pivot) {\n            j--;\n        }\n        if (i <= j) {\n            swap(items, i, j); //sawpping two elements\n            i++;\n            j--;\n        }\n    }\n    return i;\n}\n\nfunction quickSort(items, left, right) {\n    var index;\n    if (items.length > 1) {\n        index = partition(items, left, right); //index returned from partition\n        if (left < index - 1) { //more elements on the left side of the pivot\n            quickSort(items, left, index - 1);\n        }\n        if (index < right) { //more elements on the right side of the pivot\n            quickSort(items, index, right);\n        }\n    }\n    return items;\n}\n// first call to quick sort\n// var sortedArray = quickSort(items, 0, items.length - 1);\n// console.log(sortedArray); //prints [2,3,5,6,7,9]\n\n  const pop = (e) => {\n   // var new_data = document.getElementbyId('input').value;\n    var new_data = user_value;\n\n    if(localStorage.getItem('data_l') == null){\n      localStorage.setItem('data_l', \"[]\");\n    }\n\n    var old_data = JSON.parse(localStorage.getItem('data_l'));\n    old_data.pop(new_data);\n    setNotification(true);\n    setValue(\"\")\n    setAdded(false);\n    setPopped(true);\n\n    localStorage.setItem('data_l', JSON.stringify(old_data));\n    console.log(old_data)\n  }\n\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n  const list_video_link = \"https://www.youtube.com/watch?v=tw7ror9x32s\"\n\n\n  return (\n    <React.Fragment>\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            S\n          </Avatar>\n        }\n        // action={\n        //   <IconButton aria-label=\"settings\">\n        //     <MoreVertIcon />\n        //   </IconButton>\n        // }\n        title=\"List Data structure\"\n        subheader=\"A data structure that stores values of any datatype\"\n      />\n      <CardMedia\n        className={classes.media}\n        image={List_}\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        A list is a data structurethat is a mutable, or changeable, ordered sequence of elements.\n         Each element or value that is inside of a list is called an item.A list can display items \n         of any datatype at the same time.\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n\n          <LinkIcon onClick={handleClick} />\n          <Popper id={id} open={open} anchorEl={anchorEl}>\n            <Paper className={classes.paper}>\n             <Share \n               list_video_link={list_video_link}/>\n            </Paper> \n          </Popper>\n\n        </IconButton>\n        {/*<IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>*/}\n        <Button \n            variant=\"outlined\" \n            onClick={handleExpandClick}  \n            style={{ 'marginLeft': '150px', 'fontSize' : '10px'}}\n            color=\"primary\">\n            Try it out\n        </Button>\n       \n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n                <Grid item xs={12}>\n               <Grid item xs={8}>\n                  <Collapse in={notification}>\n                        <Alert\n                          severity=\"info\"\n                          icon={false}\n                          action={\n                            <IconButton\n                              aria-label=\"close\"\n                              color=\"inherit\"\n                              size=\"small\"\n                              onClick={() => {\n                                setNotification(false);\n                              }}\n                            >\n                              <CloseIcon fontSize=\"inherit\" />\n                            </IconButton>\n                          }\n                        >\n                          {\n                            added ? (<span>{\"added to list\"}</span>):(\"\")\n                          }\n                          {\n                            popped ? (<span>{\"removed from list\"}</span>):(\"\")\n                          }\n                        </Alert>\n                    </Collapse>\n                </Grid>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n                <Grid item xs={8}>\n                  <FormLabel component=\"label\" className={classes.formLabel}>Add value</FormLabel>\n                  <Input\n                    className={classes.inputSmall}\n                    fullWidth\n                    placeholder=\"Add value\"\n                    disableUnderline\n                    name=\"value\"\n                    autoComplete=\"add-value\"\n                    onChange={(e) => {\n                      setValue(e.target.value)\n                    }}\n                    value={user_value}\n                    required\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n\n             <Button\n              variant=\"contained\"\n              //disabled={disabl_}\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={push}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"add\"}</span>\n            </Button>\n            <Button\n              variant=\"contained\"\n              //disabled={disabl_}\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={pop}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"remove\"}</span>\n            </Button>\n          \n             <Grid item xs={12}>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n               \n                 {\n                  JSON.parse(localStorage.getItem('data_l')) ? (\n                    <div>\n                         {JSON.parse(localStorage.getItem('data_l')).map((value) => (\n                               <Button variant=\"outlined\" color=\"primary\">\n                                 {value}\n                              </Button>\n                     ))}\n                    </div>):(\"\")\n                 }\n              </Grid>\n            </Grid>\n        </CardContent>\n      </Collapse>\n    </Card>\n</React.Fragment>\n  );\n}\n\n","/home/pius/dev/dsa/src/views/Array.js",["322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346"],"import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Header from '../components/Header';\nimport Input from '@material-ui/core/Input';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Footer from '../components/Footer';\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Chip from '@material-ui/core/Chip';\n\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Array_ from '../assets/Array.png'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { Paper } from '@material-ui/core';\nimport Share from '../components/Share.js';\nimport Popper from '@material-ui/core/Popper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '61.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n   gridSubsection: {\n    marginBottom: theme.spacing(1),\n  },\n  inputSmall:{\n    fontSize: '13px',\n    color: '#1b1f23',\n    border: '1px solid #cfd7de',\n    borderRadius: '5px',\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    \"&::after\": {\n        borderBottom: '1px solid #949494',\n    },\n  },\n  formLabel:{\n    fontSize: '13px',\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontWeight: '600',\n    marginBottom: theme.spacing(1),\n  },\n button: {\n    backgroundColor: red[500],\n    float: 'left',\n    margin: theme.spacing(2, 2, 1, 'auto'),\n  },\n  root_: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(0),\n    },\n  },\n   paper: {\n    padding: theme.spacing(2),\n  }\n}));\n\n\nexport default function Blog() {\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  // const [ firstName, setFirstName ] = useState(\"\");\n\n  class Array {\n    constructor() {\n      this._storage = [];\n      this._length = 0; // this is our length \n    }\n\n    push(value) {\n      // so add the value to the top of our stack\n      this._storage[this._length] = value;\n      // since we added a value, we should also increase the length by 1\n      this._length++;\n    }\n    /// .....\n  }  \n\n  const [ user_value, setValue ] = React.useState(\"\");\n  const [ stack_def, setStack ] = React.useState(JSON.parse(localStorage.getItem('data_s')));\n  const [ first, setFirst ] = React.useState(false);\n  const [ added, setAdded ] = React.useState(false);\n  const [ popped, setPopped ] = React.useState(false);\n  const [ notification, setNotification ] = React.useState(false);\n\n\n  var array_;\n  array_ = new Array();\n\n  const push = (e) => {\n    var new_data = user_value;\n\n    if(localStorage.getItem('data_a') == null){\n      localStorage.setItem('data_a', \"[]\");\n    }\n\n    var old_data = JSON.parse(localStorage.getItem('data_a'));\n    // checking if value is of the same data type\n\n    // const age = parseFloat(age_);\n    \n   \n    old_data.push(new_data);\n\n\n    const array = [];\n    for(var i = 0; i < old_data.length; i++){\n      console.log(old_data[i])\n      array.push(parseFloat(old_data[i]))\n    }\n    console.log(array)\n    // linearSearch(array,2)\n    // console.log(binarySearch(array,2,0,array.length-1))\n    // console.log(selectionSort(array))\n    console.log(mergeSort(array));\n    var sortedArray = quickSort(array, 0, array.length - 1);\n    console.log(sortedArray);\n\n    setNotification(true);\n    setValue(\"\")\n    setAdded(true);\n    setPopped(false);;\n\n    localStorage.setItem('data_a', JSON.stringify(old_data));\n    console.log(old_data)\n    return array\n  }\n\n  // React.useEffect(() => {\n  // //   const linearSearch = (list, item) => {\n  // //     for (const [i, element] of list.entries()) {\n  // //       if (element === item) {\n    \n  // //         console.log(i)\n  // //       }\n  // //     }\n  // //   }    \n  // //  linearSearch(push())\n  // }, [])\n  \n  const linearSearch = (list, item) => {\n    for (var i=0;i<list.length; i++) {\n      if (list[i] === item) {\n  \n        console.log(i)\n      }\n    }\n  }  \n\n  let binarySearch = function (arr, x, start, end) {\n       \n    // Base Condition\n    if (start > end) return false;\n   \n    // Find the middle index\n    let mid=Math.floor((start + end)/2);\n   \n    // Compare mid with given key x\n    if (arr[mid]===x) return mid;\n          \n    // If element at mid is greater than x,\n    // search in the left half of mid\n    if(arr[mid] > x) \n        return binarySearch(arr, x, start, mid-1);\n    else\n  \n        // If element at mid is smaller than x,\n        // search in the right half of mid\n        return binarySearch(arr, x, mid+1, end);\n}\n\nfunction selectionSort(arr){    \n\n  for(var i= 0; i < arr.length; ++i){\n      var min = i;\n      for (var j = i; j < arr.length; ++j){\n          if (arr[min] > arr[j]){\n          min = j;\n          }\n      }\n  \n  var temp = arr[min];\n  arr[min] = arr[i];\n  arr[i] = temp;  \n  \n  }\n  return arr;\n  \n  }\n\n  function insertionSort(arr){\n    for(var i=1;i<arr.length;i++){\n        var value = arr[i];\n        var j=i;\n        while(j>0 && arr[j-1] < value){\n            arr[j] = arr[j-1];\n            j-=1;\n        }\n        arr[j] = value;\n    \n    }\n    return arr;\n    }\n\n    const merge = (arr1, arr2) => {\n      let sorted = [];\n    \n      while (arr1.length && arr2.length) {\n        if (arr1[0] < arr2[0]) sorted.push(arr1.shift());\n        else sorted.push(arr2.shift());\n      };\n    \n      return sorted.concat(arr1.slice().concat(arr2.slice()));\n    };\n    \n    const mergeSort = arr => {\n      if (arr.length <= 1) return arr;\n      let mid = Math.floor(arr.length / 2),\n          left = mergeSort(arr.slice(0, mid)),\n          right = mergeSort(arr.slice(mid));\n    \n      return merge(left, right); \n    };\n\n  //quicksort algorithm\n\nvar items = [5,3,7,6,2,9];\nfunction swap(items, leftIndex, rightIndex){\n    var temp = items[leftIndex];\n    items[leftIndex] = items[rightIndex];\n    items[rightIndex] = temp;\n}\nfunction partition(items, left, right) {\n    var pivot   = items[Math.floor((right + left) / 2)], //middle element\n        i       = left, //left pointer\n        j       = right; //right pointer\n    while (i <= j) {\n        while (items[i] < pivot) {\n            i++;\n        }\n        while (items[j] > pivot) {\n            j--;\n        }\n        if (i <= j) {\n            swap(items, i, j); //sawpping two elements\n            i++;\n            j--;\n        }\n    }\n    return i;\n}\n\nfunction quickSort(items, left, right) {\n    var index;\n    if (items.length > 1) {\n        index = partition(items, left, right); //index returned from partition\n        if (left < index - 1) { //more elements on the left side of the pivot\n            quickSort(items, left, index - 1);\n        }\n        if (index < right) { //more elements on the right side of the pivot\n            quickSort(items, index, right);\n        }\n    }\n    return items;\n}\n// first call to quick sort\n// var sortedArray = quickSort(items, 0, items.length - 1);\n// console.log(sortedArray); //prints [2,3,5,6,7,9]\n\n  const pop = (e) => {\n   // var new_data = document.getElementbyId('input').value;\n    var new_data = user_value;\n\n    if(localStorage.getItem('data_a') == null){\n      localStorage.setItem('data_a', \"[]\");\n    }\n\n    var old_data = JSON.parse(localStorage.getItem('data_a'));\n    old_data.pop(new_data);\n    setNotification(true);\n    setValue(\"\")\n    setAdded(false);\n    setPopped(true);\n\n    localStorage.setItem('data_a', JSON.stringify(old_data));\n    console.log(old_data)\n  }\n\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n  const array_video_link = \"https://www.youtube.com/watch?v=T76E09hnEuo\"\n\n\n  return (\n    <React.Fragment>\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            S\n          </Avatar>\n        }\n        // action={\n        //   <IconButton aria-label=\"settings\">\n        //     <MoreVertIcon />\n        //   </IconButton>\n        // }\n        title=\"Array Data structure\"\n        subheader=\"A primtive data type for storing value of a similar type\"\n      />\n      <CardMedia\n        className={classes.media}\n        image={Array_}\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        an array data structure, or simply an array, is a data structure consisting of a collection \n        of elements (values or variables), each identified by at least one array index or key\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n\n          <LinkIcon onClick={handleClick} />\n          <Popper id={id} open={open} anchorEl={anchorEl}>\n            <Paper className={classes.paper}>\n             <Share \n               array_video_link={array_video_link}/>\n            </Paper> \n          </Popper>\n\n        </IconButton>\n        {/*<IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>*/}\n        <Button \n            variant=\"outlined\" \n            onClick={handleExpandClick}  \n            style={{ 'marginLeft': '150px', 'fontSize' : '10px'}}\n            color=\"primary\">\n            Try it out\n        </Button>\n       \n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n                <Grid item xs={12}>\n               <Grid item xs={8}>\n                  <Collapse in={notification}>\n                        <Alert\n                          severity=\"info\"\n                          icon={false}\n                          action={\n                            <IconButton\n                              aria-label=\"close\"\n                              color=\"inherit\"\n                              size=\"small\"\n                              onClick={() => {\n                                setNotification(false);\n                              }}\n                            >\n                              <CloseIcon fontSize=\"inherit\" />\n                            </IconButton>\n                          }\n                        >\n                          {\n                            added ? (<span>{\"added to array\"}</span>):(\"\")\n                          }\n                          {\n                            popped ? (<span>{\"removed from array\"}</span>):(\"\")\n                          }\n                        </Alert>\n                    </Collapse>\n                </Grid>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n                <Grid item xs={8}>\n                  <FormLabel component=\"label\" className={classes.formLabel}>Add value</FormLabel>\n                  <Input\n                    className={classes.inputSmall}\n                    fullWidth\n                    placeholder=\"Add value\"\n                    disableUnderline\n                    name=\"value\"\n                    autoComplete=\"add-value\"\n                    onChange={(e) => {\n                      setValue(e.target.value)\n                    }}\n                    value={user_value}\n                    required\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n\n             <Button\n              variant=\"contained\"\n              //disabled={disabl_}\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={push}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"add\"}</span>\n            </Button>\n            <Button\n              variant=\"contained\"\n              //disabled={disabl_}\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={pop}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"remove\"}</span>\n            </Button>\n          \n             <Grid item xs={12}>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n               \n                 {\n                  JSON.parse(localStorage.getItem('data_a')) ? (\n                    <button>\n                         {\"{\"} {JSON.parse(localStorage.getItem('data_a')).map((value) => (\n                               <span variant=\"outlined\" color=\"primary\">\n                                 {value},\n                              </span>\n                     ))} {\"}\"}\n                    </button>):(\"\")\n                 }\n              </Grid>\n            </Grid>\n        </CardContent>\n      </Collapse>\n    </Card>\n</React.Fragment>\n  );\n}\n\n","/home/pius/dev/dsa/src/views/Searching_Binary.js",["347","348","349","350","351","352","353","354","355","356","357","358","359","360"],"// Searching_Binary\n\nimport * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Header from '../components/Header';\nimport Input from '@material-ui/core/Input';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Footer from '../components/Footer';\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Chip from '@material-ui/core/Chip';\n\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Stack_ from '../assets/binary.gif'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { Paper } from '@material-ui/core';\nimport Share from '../components/Share.js';\nimport Popper from '@material-ui/core/Popper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '68.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n   gridSubsection: {\n    marginBottom: theme.spacing(1),\n  },\n  inputSmall:{\n    fontSize: '13px',\n    color: '#1b1f23',\n    border: '1px solid #cfd7de',\n    borderRadius: '5px',\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    \"&::after\": {\n        borderBottom: '1px solid #949494',\n    },\n  },\n  formLabel:{\n    fontSize: '13px',\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontWeight: '600',\n    marginBottom: theme.spacing(1),\n  },\n button: {\n    backgroundColor: red[500],\n    float: 'left',\n    margin: theme.spacing(2, 2, 1, 'auto'),\n  },\n  root_: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(0),\n    },\n  },\n   paper: {\n    padding: theme.spacing(2),\n  }\n}));\n\n\nexport default function Blog() {\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const [ user_value,     setValue ]          = React.useState(\"\");\n  const [ search_value,   setSearch_input ]   = React.useState(\"\");\n  const [ target_index,   setTarget_index ]   = React.useState(\"\");\n  const [ sorted_arr,     setSorted_arr ]     = React.useState(\"\");\n\n  const [ added,          setAdded ]         = React.useState(false);\n  const [ popped,         setPopped ]        = React.useState(false);\n  const [ notification,   setNotification ]  = React.useState(false);\n\n\n\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n  const stack_video_link = \"https://www.youtube.com/watch?v=CgFVgp_VCN8\"\n\n\n const linear_searc = (e) => {\n\n  var old_data = JSON.parse(localStorage.getItem('binary_search'));\n\n    var i = 0;\n    const array = [];\n    for(i = 0; i < old_data.length; i++){\n      console.log(old_data[i])\n      array.push(parseFloat(old_data[i]))\n    }\n    // console.log(old_data)\n    // console.log(search_value)\n    // console.log(array)\n\n    const target_ = parseFloat(search_value)\n\n    function binarySearch (arr, x, start, end) {\n       \n\t    // Base Condition\n\t    if (start > end) return false;\n\t   \n\t    // Find the middle index\n\t    let mid=Math.floor((start + end)/2);\n\t   \n\t    // Compare mid with given key x\n\t    if (arr[mid]===x) return mid;\n\t          \n\t    // If element at mid is greater than x,\n\t    // search in the left half of mid\n\t    if(arr[mid] > x) \n\t        return binarySearch(arr, x, start, mid-1);\n\t    else\n\t  \n\t        // If element at mid is smaller than x,\n\t        // search in the right half of mid\n\t        return binarySearch(arr, x, mid+1, end);\n    }\n\n    function selectionSort(arr){    \n\n\t  for(var i= 0; i < arr.length; ++i){\n\t      var min = i;\n\t      for (var j = i; j < arr.length; ++j){\n\t          if (arr[min] > arr[j]){\n\t          min = j;\n\t          }\n\t      }\n\t  var temp = arr[min];\n\t  arr[min] = arr[i];\n\t  arr[i] = temp;  \n\t  \n\t  }\n\t  return arr;\n\t }\n\n    const star = parseFloat(0)\n    const end_ = parseFloat(array.length)\n\n    const sorted_array = selectionSort(array);\n    setSorted_arr(sorted_array)\n\n   // console.log(binarySearch(sorted_array, target_, star, end_))\n    setTarget_index(binarySearch(sorted_array, target_, star, end_))\n\n\n  };\n\n  const push = (e) => {\n    var new_data = user_value;\n\n    if(localStorage.getItem('binary_search') == null){\n      localStorage.setItem('binary_search', \"[]\");\n    }\n\n    var old_data = JSON.parse(localStorage.getItem('binary_search'));\n\n    old_data.push(new_data);\n    setNotification(true);\n    setValue(\"\")\n    setAdded(true);\n    setPopped(false);;\n\n    localStorage.setItem('binary_search', JSON.stringify(old_data));\n    // console.log(old_data)\n  }\n\n   const pop = (e) => {\n    var new_data = user_value;\n\n    if(localStorage.getItem('binary_search') == null){\n      localStorage.setItem('binary_search', \"[]\");\n    }\n\n    var old_data = JSON.parse(localStorage.getItem('binary_search'));\n    old_data.pop(new_data);\n    setNotification(true);\n    setValue(\"\")\n    setAdded(false);\n    setPopped(true);\n\n    localStorage.setItem('binary_search', JSON.stringify(old_data));\n    // console.log(old_data)\n  }\n\n  React.useEffect(() => {\n    localStorage.removeItem('binary_search');\n  }, [])\n\n\n  return (\n    <React.Fragment>\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            S\n          </Avatar>\n        }\n        title=\"Binary Search\"\n        subheader=\"Binary search will search the array and return the index of target data item, otherwise will return -1\"\n      />\n      <CardMedia\n        className={classes.media}\n        image={Stack_}\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        binary search, also known as half-interval search, logarithmic search, or binary chop,\n         is a search algorithm that finds the position of a target value within a sorted array.\n         Binary search compares the target value to the middle element of the array.\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n\n          <LinkIcon onClick={handleClick} />\n          <Popper id={id} open={open} anchorEl={anchorEl}>\n            <Paper className={classes.paper}>\n             <Share \n               stack_video_link={stack_video_link}/>\n            </Paper> \n          </Popper>\n\n        </IconButton>\n        {/*<IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>*/}\n        <Button \n            variant=\"outlined\" \n            onClick={handleExpandClick}  \n            style={{ 'marginLeft': '150px', 'fontSize' : '10px'}}\n            color=\"primary\">\n            Try it out\n        </Button>\n       \n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n              <Grid item xs={12}>\n               <Grid item xs={8}>\n                  <Collapse in={notification}>\n                        <Alert\n                          severity=\"info\"\n                          icon={false}\n                          action={\n                            <IconButton\n                              aria-label=\"close\"\n                              color=\"inherit\"\n                              size=\"small\"\n                              onClick={() => {\n                                setNotification(false);\n                              }}\n                            >\n                              <CloseIcon fontSize=\"inherit\" />\n                            </IconButton>\n                          }\n                        >\n                          {\n                            added ? (<span>{\"Added to array\"}</span>):(\"\")\n                          }\n                          {\n                            popped ? (<span>{\"popped from array\"}</span>):(\"\")\n                          }\n                        </Alert>\n                    </Collapse>\n                </Grid>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n                <Grid item xs={8}>\n                  <FormLabel component=\"label\" className={classes.formLabel}>Add value</FormLabel>\n                  <Input\n                    className={classes.inputSmall}\n                    fullWidth\n                    placeholder=\"Add integer to array\"\n                    disableUnderline\n                    name=\"value\"\n                    autoComplete=\"add-value\"\n                    onChange={(e) => {\n                      setValue(e.target.value)\n                    }}\n                    value={user_value}\n                    required\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n\n             <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={push}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"push\"}</span>\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={pop}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"pop\"}</span>\n            </Button>\n          \n             <Grid item xs={12}>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n               \n                 {\n                  JSON.parse(localStorage.getItem('binary_search')) ? (\n                    <div>\n                         {JSON.parse(localStorage.getItem('binary_search')).map((value) => (\n                               <Button variant=\"outlined\" color=\"primary\">\n                                 {value}\n                              </Button>\n                     ))}\n                    </div>):(\"\")\n                }\n              </Grid>\n            </Grid> <br/>\n\n             <Grid item xs={12}>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n               \n                 {\n                  JSON.parse(localStorage.getItem('binary_search')) ? (\n                    <div>\n                          <Grid item xs={8}>\n                              <FormLabel component=\"label\" className={classes.formLabel}>Enter value to search</FormLabel>\n                              <Input\n                                className={classes.inputSmall}\n                                fullWidth\n                                placeholder=\"Target\"\n                                disableUnderline\n                                name=\"value\"\n                                autoComplete=\"add-value\"\n                                onChange={(e) => {\n                                  setSearch_input(e.target.value)\n                                }}\n                                value={search_value}\n                                required\n                              />\n                            </Grid>\n                     </div>):(\"\")\n                 }\n              </Grid>\n            </Grid> \n\n            <Button\n              variant=\"contained\"\n              //disabled={disabl_}\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={linear_searc}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"Search\"}</span>\n            </Button>\n            <br />\n\n            <Grid item xs={12}>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n               <div>\n                 {\n                  sorted_arr ? (\n                  \t<div>\n                  \t\t<FormLabel component=\"label\" className={classes.formLabel}>Sorted array</FormLabel><br/><br/>\n                         {sorted_arr.map((value) => (\n                               <Button variant=\"outlined\" color=\"primary\">\n                                 {value}\n                              </Button>\n                     ))}\n                    </div>):(\"\")\n                 }\n                </div>\n               <br/>\n               <div \n               \t style={{ paddingTop: '10px' }}\n               >\n                 {\n                  target_index !== null &&  target_index !== \"\" &&  target_index !== false ? (\n                    <Button variant=\"contained\" \n                             style={{maxWidth: '280px', maxHeight: '35px', minWidth: '280px', minHeight: '35px'}}\n                    >\n                      Index of Target : {target_index} \n                    </Button>):(\"\")\n                 }\n                </div>\n                <div \n                  style={{ paddingTop: '10px' }}\n                 >\n                 {\n                  target_index === false ? (\n                    <Button variant=\"contained\"\n                            style={{maxWidth: '280px', maxHeight: '35px', minWidth: '280px', minHeight: '35px'}}\n                     >\n                     Target not found \n                    </Button>):(\"\")\n                 }\n                </div>\n\n              </Grid>\n            </Grid>\n\n\n\n        </CardContent>\n      </Collapse>\n    </Card>\n</React.Fragment>\n  );\n}\n\n","/home/pius/dev/dsa/src/views/Sorting_algos.js",["361","362","363","364","365","366","367","368","369","370","371","372","373","374"],"import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Header from '../components/Header';\nimport Input from '@material-ui/core/Input';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Footer from '../components/Footer';\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Chip from '@material-ui/core/Chip';\n\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Stack_ from '../assets/sort.gif'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { Paper } from '@material-ui/core';\nimport Share from '../components/Share.js';\nimport Popper from '@material-ui/core/Popper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '68.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n   gridSubsection: {\n    marginBottom: theme.spacing(1),\n  },\n  inputSmall:{\n    fontSize: '13px',\n    color: '#1b1f23',\n    border: '1px solid #cfd7de',\n    borderRadius: '5px',\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    \"&::after\": {\n        borderBottom: '1px solid #949494',\n    },\n  },\n  formLabel:{\n    fontSize: '13px',\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontWeight: '600',\n    marginBottom: theme.spacing(1),\n  },\n button: {\n    backgroundColor: red[500],\n    float: 'left',\n    margin: theme.spacing(2, 2, 1, 'auto'),\n  },\n  root_: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(0),\n    },\n  },\n   paper: {\n    padding: theme.spacing(2),\n  }\n}));\n\n\nexport default function Blog() {\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const [ user_value,     setValue ]          = React.useState(\"\");\n  // const [ search_value,   setSearch_input ]   = React.useState(\"\");\n  // const [ target_index,   setTarget_index ]   = React.useState(\"\");\n  const [ sorted_arr,     setSorted_arr ]     = React.useState(\"\");\n\n  const [ added,          setAdded ]         = React.useState(false);\n  const [ popped,         setPopped ]        = React.useState(false);\n  const [ notification,   setNotification ]  = React.useState(false);\n\n\n\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n  const stack_video_link = \"https://www.youtube.com/watch?v=CgFVgp_VCN8\"\n\n\n const linear_searc = (e) => {\n\n  var old_data = JSON.parse(localStorage.getItem('sorting'));\n\n    var i = 0;\n    const array = [];\n    for(i = 0; i < old_data.length; i++){\n      // console.log(old_data[i])\n      array.push(parseFloat(old_data[i]))\n    }\n\n  \n    function selectionSort(arr){    \n\n\t  for(var i= 0; i < arr.length; ++i){\n\t      var min = i;\n\t      for (var j = i; j < arr.length; ++j){\n\t          if (arr[min] > arr[j]){\n\t          min = j;\n\t          }\n\t      }\n\t  var temp = arr[min];\n\t  arr[min] = arr[i];\n\t  arr[i] = temp;  \n\t  \n\t  }\n\t  return arr;\n\t }\n\n    const sorted_array = selectionSort(array);\n    setSorted_arr(sorted_array)\n\n\n  };\n\n  const push = (e) => {\n    var new_data = user_value;\n\n    if(localStorage.getItem('sorting') == null){\n      localStorage.setItem('sorting', \"[]\");\n    }\n\n    var old_data = JSON.parse(localStorage.getItem('sorting'));\n\n    old_data.push(new_data);\n    setNotification(true);\n    setValue(\"\")\n    setAdded(true);\n    setPopped(false);;\n\n    localStorage.setItem('sorting', JSON.stringify(old_data));\n    // console.log(old_data)\n  }\n\n   const pop = (e) => {\n    var new_data = user_value;\n\n    if(localStorage.getItem('sorting') == null){\n      localStorage.setItem('sorting', \"[]\");\n    }\n\n    var old_data = JSON.parse(localStorage.getItem('sorting'));\n    old_data.pop(new_data);\n    setNotification(true);\n    setValue(\"\")\n    setAdded(false);\n    setPopped(true);\n\n    localStorage.setItem('sorting', JSON.stringify(old_data));\n    // console.log(old_data)\n  }\n\n  React.useEffect(() => {\n    localStorage.removeItem('sorting');\n  }, [])\n\n\n  return (\n    <React.Fragment>\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            S\n          </Avatar>\n        }\n        title=\"Sorting Algorithms\"\n        subheader=\"Sorting Algorithms will sort the array and return the data items in an ascending order\"\n      />\n      <CardMedia\n        className={classes.media}\n        image={Stack_}\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Simple visualization of how linear search works...\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n\n          <LinkIcon onClick={handleClick} />\n          <Popper id={id} open={open} anchorEl={anchorEl}>\n            <Paper className={classes.paper}>\n             <Share \n               stack_video_link={stack_video_link}/>\n            </Paper> \n          </Popper>\n\n        </IconButton>\n        {/*<IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>*/}\n        <Button \n            variant=\"outlined\" \n            onClick={handleExpandClick}  \n            style={{ 'marginLeft': '150px', 'fontSize' : '10px'}}\n            color=\"primary\">\n            Try it out\n        </Button>\n       \n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n              <Grid item xs={12}>\n               <Grid item xs={8}>\n                  <Collapse in={notification}>\n                        <Alert\n                          severity=\"info\"\n                          icon={false}\n                          action={\n                            <IconButton\n                              aria-label=\"close\"\n                              color=\"inherit\"\n                              size=\"small\"\n                              onClick={() => {\n                                setNotification(false);\n                              }}\n                            >\n                              <CloseIcon fontSize=\"inherit\" />\n                            </IconButton>\n                          }\n                        >\n                          {\n                            added ? (<span>{\"Added to array\"}</span>):(\"\")\n                          }\n                          {\n                            popped ? (<span>{\"popped from array\"}</span>):(\"\")\n                          }\n                        </Alert>\n                    </Collapse>\n                </Grid>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n                <Grid item xs={8}>\n                  <FormLabel component=\"label\" className={classes.formLabel}>Add value</FormLabel>\n                  <Input\n                    className={classes.inputSmall}\n                    fullWidth\n                    placeholder=\"Add integer to array\"\n                    disableUnderline\n                    name=\"value\"\n                    autoComplete=\"add-value\"\n                    onChange={(e) => {\n                      setValue(e.target.value)\n                    }}\n                    value={user_value}\n                    required\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n\n             <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={push}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"push\"}</span>\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={pop}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"pop\"}</span>\n            </Button>\n          \n             <Grid item xs={12}>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n               \n                 {\n                  JSON.parse(localStorage.getItem('sorting')) ? (\n                    <div>\n                         {JSON.parse(localStorage.getItem('sorting')).map((value) => (\n                               <Button variant=\"outlined\" color=\"primary\">\n                                 {value}\n                              </Button>\n                     ))}\n                    </div>):(\"\")\n                }\n              </Grid>\n            </Grid> <br/>\n\n\t        {\n              JSON.parse(localStorage.getItem('sorting')) ? (\n                <Button\n\t              variant=\"contained\"\n\t              //disabled={disabl_}\n\t              color=\"secondary\"\n\t              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n\t              onClick={linear_searc}\n\t              className={classes.button}\n\t              >\n\t              <span style={{fontWeight: 'bold'}}>{\"Sort\"}</span>\n\t            </Button>\n               ):(\"\")\n\t        }\n\n            <br />\n\n            <Grid item xs={12}>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n               <div>\n                 {\n                  sorted_arr ? (\n                  \t<div>\n                  \t\t<FormLabel component=\"label\" className={classes.formLabel}>Sorted array</FormLabel><br/><br/>\n                         {sorted_arr.map((value) => (\n                               <Button variant=\"outlined\" color=\"primary\">\n                                 {value}\n                              </Button>\n                     ))}\n                    </div>):(\"\")\n                 }\n                </div>\n               <br/>\n              </Grid>\n            </Grid>\n\n\n\n        </CardContent>\n      </Collapse>\n    </Card>\n</React.Fragment>\n  );\n}\n\n","/home/pius/dev/dsa/src/views/Searching_algos.js",["375","376","377","378","379","380","381","382","383","384","385","386","387","388"],"import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Header from '../components/Header';\nimport Input from '@material-ui/core/Input';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Footer from '../components/Footer';\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Chip from '@material-ui/core/Chip';\n\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Stack_ from '../assets/lin1.gif'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { Paper } from '@material-ui/core';\nimport Share from '../components/Share.js';\nimport Popper from '@material-ui/core/Popper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '68.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n   gridSubsection: {\n    marginBottom: theme.spacing(1),\n  },\n  inputSmall:{\n    fontSize: '13px',\n    color: '#1b1f23',\n    border: '1px solid #cfd7de',\n    borderRadius: '5px',\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    \"&::after\": {\n        borderBottom: '1px solid #949494',\n    },\n  },\n  formLabel:{\n    fontSize: '13px',\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontWeight: '600',\n    marginBottom: theme.spacing(1),\n  },\n button: {\n    backgroundColor: red[500],\n    float: 'left',\n    margin: theme.spacing(2, 2, 1, 'auto'),\n  },\n  root_: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(0),\n    },\n  },\n   paper: {\n    padding: theme.spacing(2),\n  }\n}));\n\n\nexport default function Blog() {\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const [ user_value,     setValue ]          = React.useState(\"\");\n  const [ search_value,   setSearch_input ]   = React.useState(\"\");\n  const [ target_index,   setTarget_index ]   = React.useState(\"\");\n\n  const [ added,          setAdded ]         = React.useState(false);\n  const [ popped,         setPopped ]        = React.useState(false);\n  const [ notification,   setNotification ]  = React.useState(false);\n\n\n\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n  const stack_video_link = \"https://www.youtube.com/watch?v=C46QfTjVCNU\"\n\n\n const linear_searc = (e) => {\n\n  var old_data = JSON.parse(localStorage.getItem('linear_search'));\n    //  pius zone \n   // ===========\n    var i = 0;\n    const array = [];\n    for(i = 0; i < old_data.length; i++){\n      console.log(old_data[i])\n      array.push(parseFloat(old_data[i]))\n    }\n    console.log(old_data)\n    console.log(search_value)\n    console.log(array)\n\n    const target_ = parseFloat(search_value)\n\n   function linearSearch (list, item){\n    for (var i=0;i<list.length; i++) {\n        if (list[i] === item) {\n          return i;\n        }\n      }\n      return -1;\n    }\n\n      setTarget_index(linearSearch(array, target_))\n      console.log(linearSearch(array, target_))\n    // setSearch_input(\"\")\n  };\n\n  const push = (e) => {\n    var new_data = user_value;\n\n    if(localStorage.getItem('linear_search') == null){\n      localStorage.setItem('linear_search', \"[]\");\n    }\n\n    var old_data = JSON.parse(localStorage.getItem('linear_search'));\n\n    old_data.push(new_data);\n    setNotification(true);\n    setValue(\"\")\n    setAdded(true);\n    setPopped(false);;\n\n    localStorage.setItem('linear_search', JSON.stringify(old_data));\n    // console.log(old_data)\n  }\n\n   const pop = (e) => {\n    var new_data = user_value;\n\n    if(localStorage.getItem('linear_search') == null){\n      localStorage.setItem('linear_search', \"[]\");\n    }\n\n    var old_data = JSON.parse(localStorage.getItem('linear_search'));\n    old_data.pop(new_data);\n    setNotification(true);\n    setValue(\"\")\n    setAdded(false);\n    setPopped(true);\n\n    localStorage.setItem('linear_search', JSON.stringify(old_data));\n    // console.log(old_data)\n  }\n\n  React.useEffect(() => {\n    localStorage.removeItem('linear_search');\n  }, [])\n\n\n  return (\n    <React.Fragment>\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            S\n          </Avatar>\n        }\n        title=\"Linear Search\"\n        subheader=\"Linear search will search the array and return the index of target data item, otherwise will return -1\"\n      />\n      <CardMedia\n        className={classes.media}\n        image={Stack_}\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        a linear search or sequential search is a method for finding an element within a list. \n        It sequentially checks each element of the list until a match is found or the whole list \n        has been searched.\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n\n          <LinkIcon onClick={handleClick} />\n          <Popper id={id} open={open} anchorEl={anchorEl}>\n            <Paper className={classes.paper}>\n             <Share \n               stack_video_link={stack_video_link}/>\n            </Paper> \n          </Popper>\n\n        </IconButton>\n        {/*<IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>*/}\n        <Button \n            variant=\"outlined\" \n            onClick={handleExpandClick}  \n            style={{ 'marginLeft': '150px', 'fontSize' : '10px'}}\n            color=\"primary\">\n            Try it out\n        </Button>\n       \n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n              <Grid item xs={12}>\n               <Grid item xs={8}>\n                  <Collapse in={notification}>\n                        <Alert\n                          severity=\"info\"\n                          icon={false}\n                          action={\n                            <IconButton\n                              aria-label=\"close\"\n                              color=\"inherit\"\n                              size=\"small\"\n                              onClick={() => {\n                                setNotification(false);\n                              }}\n                            >\n                              <CloseIcon fontSize=\"inherit\" />\n                            </IconButton>\n                          }\n                        >\n                          {\n                            added ? (<span>{\"Added to array\"}</span>):(\"\")\n                          }\n                          {\n                            popped ? (<span>{\"popped from array\"}</span>):(\"\")\n                          }\n                        </Alert>\n                    </Collapse>\n                </Grid>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n                <Grid item xs={8}>\n                  <FormLabel component=\"label\" className={classes.formLabel}>Add value</FormLabel>\n                  <Input\n                    className={classes.inputSmall}\n                    fullWidth\n                    placeholder=\"Add integer to array\"\n                    disableUnderline\n                    name=\"value\"\n                    autoComplete=\"add-value\"\n                    onChange={(e) => {\n                      setValue(e.target.value)\n                    }}\n                    value={user_value}\n                    required\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n\n             <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={push}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"push\"}</span>\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={pop}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"pop\"}</span>\n            </Button>\n          \n             <Grid item xs={12}>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n               \n                 {\n                  JSON.parse(localStorage.getItem('linear_search')) ? (\n                    <div>\n                         {JSON.parse(localStorage.getItem('linear_search')).map((value) => (\n                               <Button variant=\"outlined\" color=\"primary\">\n                                 {value}\n                              </Button>\n                     ))}\n                    </div>):(\"\")\n                }\n              </Grid>\n            </Grid> <br/>\n\n             <Grid item xs={12}>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n               \n                 {\n                  JSON.parse(localStorage.getItem('linear_search')) ? (\n                    <div>\n                          <Grid item xs={8}>\n                              <FormLabel component=\"label\" className={classes.formLabel}>Enter value to search</FormLabel>\n                              <Input\n                                className={classes.inputSmall}\n                                fullWidth\n                                placeholder=\"Target\"\n                                disableUnderline\n                                name=\"value\"\n                                autoComplete=\"add-value\"\n                                onChange={(e) => {\n                                  setSearch_input(e.target.value)\n                                }}\n                                value={search_value}\n                                required\n                              />\n                            </Grid>\n                     </div>):(\"\")\n                 }\n              </Grid>\n            </Grid> \n\n            <Button\n              variant=\"contained\"\n              //disabled={disabl_}\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={linear_searc}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"Search\"}</span>\n            </Button>\n            <br />\n\n            <Grid item xs={12}>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n               \n                {\n                  target_index !== null &&  target_index !== \"\" ? (\n                    <Button variant=\"contained\" \n                             style={{maxWidth: '280px', maxHeight: '35px', minWidth: '280px', minHeight: '35px'}}\n                    >\n                      Index of Target : {target_index} \n                    </Button>):(\"\")\n                }\n                 {\n                  target_index === -1 ? (\n                    <Button variant=\"contained\"\n                            style={{maxWidth: '280px', maxHeight: '35px', minWidth: '280px', minHeight: '35px'}}\n                     >\n                     Target not found \n                    </Button>):(\"\")\n                 }\n\n              </Grid>\n            </Grid>\n\n\n\n        </CardContent>\n      </Collapse>\n    </Card>\n</React.Fragment>\n  );\n}\n\n","/home/pius/dev/dsa/src/components/Share.js",["389","390","391","392","393","394","395","396","397","398","399","400","401","402"],"import React from \"react\";\nimport {\n  EmailShareButton,\n  FacebookShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n} from \"react-share\";\n\nimport {\n  EmailIcon,\n  FacebookIcon,\n  TwitterIcon,\n  WhatsappIcon,\n} from \"react-share\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Redirect } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  social: {\n    marginLeft: \"10px\",\n    paddingBottom: \"20px\",\n    marginBottom: \"20px\",\n  },\n  icon: {\n    outline: \"none\",\n    border: \"none\",\n  },\n  share: {\n    fontWeight: \"bold\",\n    fontSize: \"20px\",\n  },\n}));\n\nexport default function InsetList(props) {\n  const classes = useStyles();\n  const shareUrl = \"https://homepetvet.com\";\n  return (\n    <List component=\"nav\" className={classes.root} aria-label=\"contacts\">\n      <Typography\n        className={classes.share}\n        variant=\"caption\"\n        display=\"block\"\n        gutterBottom\n      >\n        Video link\n      </Typography>\n      {/*<ListItem button>\n        <FacebookShareButton url={shareUrl} className={classes.icon}>\n          <FacebookIcon size={32}  round={true} className={classes.icon} />\n          <span className={classes.social}>{\" Facebook\"}</span>\n        </FacebookShareButton>\n        {/* <ListItemText primary=\" Facebook\" className={classes.social}/> \n      </ListItem>\n      <ListItem button>\n        <TwitterShareButton url={shareUrl} className={classes.icon}>\n          <TwitterIcon size={32} className={classes.icon} round={true} />\n          <span className={classes.social}>{\" Twitter\"}</span>\n        </TwitterShareButton>\n        {/* <ListItemText primary=\"Twitter\" className={classes.social} /> \n      </ListItem>\n      <ListItem button>\n        <WhatsappShareButton url={shareUrl} className={classes.icon} >\n          <WhatsappIcon size={32} round={true} className={classes.icon}/>\n          <span className={classes.social}>{\" Whatsapp\"}</span>\n        </WhatsappShareButton>\n        {/* <ListItemText primary=\" Whatsapp\" className={classes.social} /> \n      </ListItem>*/}\n\n      <ListItem>\n        <a href={props.stack_video_link}>{props.stack_video_link}</a>\n      </ListItem>\n    </List>\n  );\n}\n","/home/pius/dev/dsa/src/components/Main.js",[],"/home/pius/dev/dsa/src/views/PriorityQueue.js",["403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418"],"import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Header from '../components/Header';\nimport Input from '@material-ui/core/Input';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Footer from '../components/Footer';\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Chip from '@material-ui/core/Chip';\n\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Queue_ from '../assets/prio.gif'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { Paper } from '@material-ui/core';\nimport Share from '../components/Share.js';\nimport Popper from '@material-ui/core/Popper';\nimport PriorityQueue from 'javascript-priority-queue';\n\nimport Stack_DS from './Stack.js';\n\nconst queue = new PriorityQueue('min');\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '68.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n   gridSubsection: {\n    marginBottom: theme.spacing(1),\n  },\n  inputSmall:{\n    fontSize: '13px',\n    color: '#1b1f23',\n    border: '1px solid #cfd7de',\n    borderRadius: '5px',\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    \"&::after\": {\n        borderBottom: '1px solid #949494',\n    },\n  },\n  formLabel:{\n    fontSize: '13px',\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontWeight: '600',\n    marginBottom: theme.spacing(1),\n  },\n button: {\n    backgroundColor: red[500],\n    float: 'left',\n    margin: theme.spacing(2, 2, 1, 'auto'),\n  },\n  root_: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(0),\n    },\n  },\n   paper: {\n    padding: theme.spacing(2),\n  }\n}));\n\n\nexport default function Blog() {\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n\n  const [ user_value, setValue ] = React.useState(\"\");\n  const [ priority_value, setPriority ] = React.useState(\"\");\n\n  const [ popped, setPopped ] = React.useState(false);\n  const [ added, setAdded ] = React.useState(false);\n  const [ peeked, setPeek ] = React.useState(false);\n  const [ peek_value, setPeeked ] = React.useState(\"\");\n\n  const [ notification, setNotification ] = React.useState(false);\n\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n  const stack_video_link = \"https://www.youtube.com/watch?v=wptevk0bshY\"\n\n  let items = [];\n\n  const enqueue = (e) => {\n    queue.enqueue(user_value, priority_value);\n    setNotification(true)\n    setAdded(true)\n    setPopped(false)\n    setPeek(false)\n    setValue(\"\")\n    setPriority(\"\")\n\n    localStorage.setItem('priority_q', queue.toString());\n  }\n\n  const denqueue = (e) => {\n    // console.log(user_value)\n    // console.log(priority_value)\n    queue.dequeue();\n    setNotification(true)\n    setPopped(true)\n    setAdded(false)\n    setPeek(false)\n    setValue(\"\")\n    setPriority(\"\")\n\n    localStorage.setItem('priority_q', queue.toString());\n  }\n  const peek_func = (e) => {\n    if(localStorage.getItem('priority_q', queue.toString())){\n      // console.log(queue.peek());\n      console.log(\"queue.peek()\");\n      setNotification(true)\n      setPeek(true)\n      setPopped(false)\n      setAdded(false)\n      setPeeked(queue.peek())\n    }\n   \n  }\n\n  React.useEffect(() => {\n    localStorage.removeItem('priority_q')\n  }, [])\n  \n\n\n  return (\n    <React.Fragment>\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            S\n          </Avatar>\n        }\n        // action={\n        //   <IconButton aria-label=\"settings\">\n        //     <MoreVertIcon />\n        //   </IconButton>\n        // }\n        title=\"Priority Queue Data structure\"\n        subheader=\"Methods: enqueue(), dequeue(), gethead()  Principle: FIFO (First In First Out)\"\n      />\n      <CardMedia\n        className={classes.media}\n        image={Queue_}\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        a priority queue is an abstract data type similar to a regular \n        queue or stack data structure in which each element additionally \n        has a \"priority\" associated with it. \n        In a priority queue, an element with high priority is served before an element with low priority.\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n\n          <LinkIcon onClick={handleClick} />\n          <Popper id={id} open={open} anchorEl={anchorEl}>\n            <Paper className={classes.paper}>\n             <Share \n               stack_video_link={stack_video_link}/>\n            </Paper> \n          </Popper>\n\n        </IconButton>\n        {/*<IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>*/}\n        <Button \n            variant=\"outlined\" \n            onClick={handleExpandClick}  \n            style={{ 'marginLeft': '150px', 'fontSize' : '10px'}}\n            color=\"primary\">\n            Try it out\n        </Button>\n       \n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n                <Grid item xs={12}>\n               <Grid item xs={8}>\n                  <Collapse in={notification}>\n                        <Alert\n                          severity=\"info\"\n                          icon={false}\n                          action={\n                            <IconButton\n                              aria-label=\"close\"\n                              color=\"inherit\"\n                              size=\"small\"\n                              onClick={() => {\n                                setNotification(false);\n                              }}\n                            >\n                              <CloseIcon fontSize=\"inherit\" />\n                            </IconButton>\n                          }\n                        >\n                        \n                         {\n                            peeked ? (<span>{\"Value with lowest priority\"} : {peek_value} </span>):(\"\")\n                          }\n                          {\n                            popped ? (<span>{\"Deqeued from priority queue\"}</span>):(\"\")\n                          }\n                          {\n                            added ? (<span>{\"Enqueued to priority queue\"}</span>):(\"\")\n                          }\n                        </Alert>\n                    </Collapse>\n                </Grid>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n                <Grid item xs={8}>\n                  <FormLabel component=\"label\" className={classes.formLabel}>Add data item and its priority </FormLabel>\n                   <div style={{ display: 'inline-flex' }}>\n                    <Input\n                    className={classes.inputSmall}\n                    fullWidth\n                    placeholder=\"Add value\"\n                    disableUnderline\n                    name=\"value\"\n                    autoComplete=\"add-value\"\n                    onChange={(e) => {\n                      setValue(e.target.value)\n                    }}\n                    value={user_value}\n                    required\n                  />\n                  <Input\n                    className={classes.inputSmall}\n                    fullWidth\n                    placeholder=\"Add priority\"\n                    disableUnderline\n                    name=\"value\"\n                    autoComplete=\"add-value\"\n                    onChange={(e) => {\n                      setPriority(e.target.value)\n                    }}\n                    value={priority_value}\n                    required\n                  />\n                   </div>\n\n                  \n                </Grid>\n              </Grid>\n            </Grid>\n\n             <Button\n              variant=\"contained\"\n              //disabled={disabl_}\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={enqueue}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"Enqueue\"}</span>\n            </Button>\n            <Button\n              variant=\"contained\"\n              //disabled={disabl_}\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={denqueue}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"Dequeue\"}</span>\n            </Button>\n             <Button\n              variant=\"contained\"\n              //disabled={disabl_}\n              color=\"secondary\"\n              style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n              onClick={peek_func}\n              className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"Peek\"}</span>\n            </Button>\n            \n          \n             <Grid item xs={12}>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n               \n                {\n                  localStorage.getItem('priority_q') ? (\n                    <Button variant=\"contained\" style={{maxWidth: '150px', minWidth: '150px'}}>\n                         {localStorage.getItem('priority_q')}\n                    </Button>):(\"\")\n                 }\n              </Grid>\n            </Grid>\n        </CardContent>\n      </Collapse>\n    </Card>         \n    </React.Fragment>\n  );\n}\n","/home/pius/dev/dsa/src/components/Footer.js",["419"],"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'; \n\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: 'grey',\n    marginTop: theme.spacing(3),\n    padding: theme.spacing(1, 0),\n    paddingTop: theme.spacing(8),\n    height: '300px'\n  },\n  title: {\n    fontSize: '25px',\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  descrip: {\n    fontSize: '15px',\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  color: {\n    color: 'yellow'\n  },\n  color_: {\n    color: 'white'\n  },\n  description: {\n    marginBottom: '20px',\n    color: 'white'\n  }\n}));\n\nfunction Footer(props) {\n  const classes = useStyles();\n  const { description, title} = props;\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h6\" align=\"left\" className={classes.title} gutterBottom>\n          {title}\n        </Typography>\n        <Typography\n          variant=\"h6\"\n          align=\"center\"\n          color=\"white\"\n          component=\"p\"\n          className={classes.description}\n        >\n         \n        </Typography>\n\n        <Grid container spacing={1}>\n        <Grid item xs={12} \n          md={3}\n          sm={3}\n          xl={4}>\n             <Typography className={classes.color_} variant=\"h7\" align=\"left\" gutterBottom>\n                 <span className={classes.descrip}> {description} </span><br />\n                 {'Copyright © '} {' '}\n                  {new Date().getFullYear()}\n                  {'.'} Konecthub tech organization based ug\n              </Typography>\n            \n        </Grid>\n\n       \n\n        <Grid item xs={12} \n          md={3}\n          sm={3}\n          xl={4}>\n\n              <Typography variant=\"h6\" align=\"left\" gutterBottom>\n                <span className={classes.color}>Call us:</span>   <span className={classes.color_}> +32 488 94 44 48</span>\n              </Typography>\n               \n        </Grid>\n\n      \n\n        <Grid item xs={12} \n          md={3}\n          sm={3}\n          xl={4}>\n           \n              <Typography variant=\"h6\" align=\"left\" gutterBottom>\n                 <span className={classes.color}>Find us:</span>   <span className={classes.color_}> www.datacode.com</span>\n              </Typography>\n             \n        </Grid>\n\n         \n\n        <Grid item xs={12} \n          md={3}\n          sm={3}\n          xl={4}>\n              <Typography variant=\"h6\" align=\"left\" gutterBottom>\n               <span className={classes.color}>Email us:</span>  <span className={classes.color_}> contact@datacode.com</span> \n              </Typography>\n        </Grid> \n\n        </Grid>\n      </Container>\n    </footer>\n  );\n}\n\n\n\nexport default Footer;\n","/home/pius/dev/dsa/src/components/Header.js",["420"],"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n//import IconButton from '@material-ui/core/IconButton';\n//import SearchIcon from '@material-ui/icons/Search';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from '@material-ui/core/Paper';\nimport tech from '../assets/tech.png'\n//import { Redirect } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    //backgroundColor: 'black',\n  },\n  paper: {\n    height: 65,\n    width: 150,\n    //borderRadius: '40%',\n    backgroundColor: '#f1f1f1',\n    backgroundImage: `url(${tech})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    display: 'flex',\n    margin: 'auto',\n  },\n  toolbarTitle: {\n    flex: 1,\n    color: 'blue',\n    fontWeight: 'bold'\n  },\n  toolbarSecondary: {\n    justifyContent: 'space-between',\n    overflowX: 'auto',\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0,\n  },\n   active: {\n    fontSize: '17px',\n    color: 'blue',\n    fontWeight: 'bold'\n  }\n}));\n\nfunction Header(props) {\n  const classes = useStyles();\n  const { title } = props;\n\n  const [active_1, setActive_1] = React.useState(false);\n  const [active_2, setActive_2] = React.useState(false);\n  const [active_3, setActive_3] = React.useState(false);\n  const [active_4, setActive_4] = React.useState(false);\n\n  React.useEffect(() => {\n    if(window.location.pathname === \"/\") {\n      setActive_1(true)\n      setActive_2(false)\n      setActive_3(false)\n      setActive_4(false)\n    }else if(window.location.pathname === \"/more_sorting\"){\n      setActive_1(false)\n      setActive_2(true)\n      setActive_3(false)\n      setActive_4(false)\n    }else if(window.location.pathname === \"/tower\"){\n      setActive_1(false)\n      setActive_2(false)\n      setActive_3(true)\n      setActive_4(false)\n    }\n    else if(window.location.pathname === \"/about\"){\n      setActive_1(false)\n      setActive_2(false)\n      setActive_3(false)\n      setActive_4(true)\n    }\n  }, []);\n  \n\n  return (\n    <React.Fragment>\n      <Toolbar className={classes.toolbar}>\n        <Paper className={classes.paper} elevation={0} />\n        <Typography\n          component=\"h2\"\n          variant=\"h5\"\n          color=\"inherit\"\n          align=\"center\"\n          noWrap\n          className={classes.toolbarTitle}\n        >\n          {title}\n        </Typography>\n        {/*<IconButton>\n          <SearchIcon />\n        </IconButton>\n        <Button variant=\"outlined\" size=\"small\">\n          Sign up\n        </Button>\n         <Button variant=\"outlined\" size=\"small\">\n          Sign in\n        </Button>*/}\n      </Toolbar>\n      <Toolbar component=\"nav\" variant=\"dense\" className={classes.toolbarSecondary}>\n         <Grid item xs={2}> </Grid>\n         {\n           active_1 ? (<Link to=\"/\"  style={{ textDecoration: 'none', color: 'grey' }}>\n            <span  className={classes.active} >HOME</span>\n          </Link>) : (<Link to=\"/\"  style={{ textDecoration: 'none', color: 'grey' }}>\n            <span  className={classes.link} >HOME</span>\n          </Link>)\n         }\n         {\n           active_2 ? (<Link to=\"/more_sorting\"  style={{ textDecoration: 'none', color: 'grey' }}>\n            <span  className={classes.active} >SORTING </span>\n          </Link>) : (<Link to=\"/more_sorting\"  style={{ textDecoration: 'none', color: 'grey' }}>\n            <span  className={classes.link} >SORTING </span>\n          </Link>)\n         }\n         \n          {\n           active_3 ? (<Link to=\"/tower\"  style={{ textDecoration: 'none', color: 'grey' }}>\n            <span  className={classes.active} >TOWERS OF HANOI </span>\n          </Link>) : (<Link to=\"/tower\"  style={{ textDecoration: 'none', color: 'grey' }}>\n            <span  className={classes.link} >TOWERS OF HANOI </span>\n          </Link>)\n         }\n         {\n           active_4 ? (<Link to=\"/about\"  style={{ textDecoration: 'none', color: 'grey' }}>\n            <span  className={classes.active} >ABOUT </span>\n          </Link>) : (<Link to=\"/about\"  style={{ textDecoration: 'none', color: 'grey' }}>\n            <span  className={classes.link} >ABOUT </span>\n          </Link>)\n         }\n         \n         \n        <Grid item xs={2}> </Grid>\n      </Toolbar>\n    </React.Fragment>\n  );\n}\n\nHeader.propTypes = {\n  sections: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n\n","/home/pius/dev/dsa/src/components/Layout.js",["421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446"],"import React from \"react\";\nimport LinkedList from \"./LinkedList\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Header from '../components/Header';\nimport Input from '@material-ui/core/Input';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Footer from '../components/Footer';\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Chip from '@material-ui/core/Chip';\n\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Queue_ from '../assets/queue.png'\nimport Linked_ from '../assets/linked.gif'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { Paper } from '@material-ui/core';\nimport Share from '../components/Share.js';\nimport Popper from '@material-ui/core/Popper';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nconst list = new LinkedList()\n\nconsole.log(list)\n\nexport default class Layout extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = list\n        this.addToHead = this.addToHead.bind(this);\n        this.remove = this.remove.bind(this);\n        this.removeFromHead = this.removeFromHead.bind(this);\n\n    }\n\n    componentDidMount() {\n        this._inputElement.focus();\n    }\n\n    addToHead(e) {\n        if (this._inputElement.value !== \"\") {\n            this.setState(list.addToHead(this._inputElement.value))\n        };\n\n        this._inputElement.value = \"\";\n        console.log(list)\n        e.preventDefault()\n        this._inputElement.focus()\n    }\n\n\n\n    removeFromHead(e) {\n        list.removeFromHead()\n        this.setState(list)\n        e.preventDefault()\n        console.log(list)\n    };\n\n    remove(e) {\n        if (this._inputDelete.value !== \"\") {\n            list.remove(this._inputDelete.value)\n        };\n\n        this._inputDelete.value = \"\";\n        this.setState(list)\n        console.log(list)\n        e.preventDefault();\n        this._inputDelete.focus()\n\n    }\n\n    render() {\n\n        const useStyles = makeStyles((theme) => ({\n              root: {\n                maxWidth: 345,\n              },\n              media: {\n                height: 0,\n                paddingTop: '56.25%', // 16:9\n              },\n              expand: {\n                transform: 'rotate(0deg)',\n                marginLeft: 'auto',\n                transition: theme.transitions.create('transform', {\n                  duration: theme.transitions.duration.shortest,\n                }),\n              },\n              expandOpen: {\n                transform: 'rotate(180deg)',\n              },\n              avatar: {\n                backgroundColor: red[500],\n              },\n               gridSubsection: {\n                marginBottom: theme.spacing(1),\n              },\n              inputSmall:{\n                fontSize: '13px',\n                color: '#1b1f23',\n                border: '1px solid #cfd7de',\n                borderRadius: '5px',\n                padding: theme.spacing(1),\n                marginTop: theme.spacing(1),\n                \"&::after\": {\n                    borderBottom: '1px solid #949494',\n                },\n              },\n              formLabel:{\n                fontSize: '13px',\n                color: 'rgba(0, 0, 0, 0.5)',\n                fontWeight: '600',\n                marginBottom: theme.spacing(1),\n              },\n             button: {\n                backgroundColor: red[500],\n                float: 'left',\n                margin: theme.spacing(2, 2, 1, 'auto'),\n              },\n              root_: {\n                display: 'flex',\n                '& > *': {\n                  margin: theme.spacing(0),\n                },\n              },\n               paper: {\n                padding: theme.spacing(2),\n              }\n            }));\n\n        let current = this.state.head;\n\n        let items = [];\n        var i = 0;\n\n        while (current !== \"null\") {\n            console.log(current.value)\n            console.log(current.next)\n            if(current.next === \"null\"){\n                console.log(\"yes\")\n                items.push(\n                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n                      <Button>{current.value}</Button>\n                      <Button \n                         style={{\n                                border: '1px solid',\n                            }}\n                      ></Button>\n                      <ArrowForwardIcon \n                          style={{\n                                marginTop: '7px',\n                            }}/>\n                      <span \n                        style={{\n                                marginTop: '9px',\n                            }}>NULL\n                      </span>\n                    </ButtonGroup>\n                );\n            }else{\n                items.push(\n                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n                      <Button>{current.value}</Button>\n                      <Button \n                         style={{\n                                border: '1px solid',\n                            }}\n                      ></Button>\n                      <ArrowForwardIcon \n                          style={{\n                                marginTop: '7px',\n                            }}/>\n                    </ButtonGroup>\n                );\n            }\n            \n            current = current.next;\n           \n        }\n        return (\n\n            <div className=\"linkedListMain\">\n\n              <React.Fragment>\n                    <Card className={useStyles.root}>\n                      <CardHeader\n                        avatar={\n                          <Avatar aria-label=\"recipe\" className={useStyles.avatar}>\n                             LS\n                          </Avatar>\n                        }\n                        // action={\n                        //   <IconButton aria-label=\"settings\">\n                        //     <MoreVertIcon />\n                        //   </IconButton>\n                        // }\n                        title=\"Linked List Data structure\"\n                        subheader=\"Methods: enqueue(), dequeue(), gethead()  Principle: FIFO (First In First Out)\"\n                      />\n                     <img src={Linked_} alt=\"linked list\" width=\"370\" height=\"170\"/>\n                      <CardMedia\n                        className={useStyles.media}\n                       // image={Queue_}\n                        title=\"Paella dish\"\n                      />\n                      <CardContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        A linked list is a sequence of data structures, which are connected together via links.\n                         Linked List is a sequence of links \n                        which contains items. Each link contains a connection to another link\n                        </Typography>\n\n                        <br/>\n                        <Button \n                        variant=\"outlined\" \n                        // onClick={handleExpandClick}  \n                        style={{ 'marginLeft': '100px', 'fontSize' : '10px'}}\n                        color=\"primary\">\n                        Try it out\n                      </Button>\n                        <Grid item xs={8}>    \n                        <form onSubmit={this.addToHead}>\n                          <input\n                            ref={(a) => this._inputElement = a}\n                            style={{\n                                fontSize: '13px',\n                                color: '#1b1f23',\n                                border: '2px solid #cfd7de',\n                                borderRadius: '5px',\n                                padding: '10px',\n                                marginTop: '5px',\n                            }}\n                            fullWidth\n                            placeholder=\"Add value to linked list\"\n                            disableUnderline\n                            name=\"value\"\n                            required\n                          />\n\n                           <button\n                              type=\"submit\"\n                              style={{\n                                maxWidth: '80px', \n                                maxHeight: '35px', \n                                minWidth: '80px', \n                                minHeight: '35px',\n                               // backgroundColor: red[500],\n                                float: 'left',\n                                margin: '15px',\n\n                            }}\n                              // onClick={push}\n                              >\n                              <span style={{fontWeight: 'bold'}}>{\"Add value\"}</span>\n                            </button>\n\n                        </form>\n                        </Grid>\n                         <Grid item xs={8}>\n                         <form  onSubmit={this.remove}>\n                          <input\n                            ref={(a) => this._inputDelete = a}\n                            style={{\n                                fontSize: '13px',\n                                color: '#1b1f23',\n                                border: '2px solid #cfd7de',\n                                borderRadius: '5px',\n                                padding: '10px',\n                                marginTop: '5px',\n                            }}\n                            fullWidth\n                            placeholder=\"Delete Specific item\"\n                            disableUnderline\n                            name=\"value\"\n                            required\n                          />\n\n                           <button\n                              type=\"submit\"\n                              style={{\n                                maxWidth: '80px', \n                                maxHeight: '35px', \n                                minWidth: '80px', \n                                minHeight: '35px',\n                               // backgroundColor: red[500],\n                                float: 'left',\n                                margin: '15px',\n\n                            }}\n                              // onClick={push}\n                              >\n                              <span style={{fontWeight: 'bold'}}>{\"Delete\"}</span>\n                            </button>\n\n                        </form> \n                        </Grid>\n                        <Grid item xs={8}>\n                            <button id=\"removeHead\" \n                               onClick={this.removeFromHead}\n                                style={{\n                                    maxWidth: '150px', \n                                    maxHeight: '35px', \n                                    minWidth: '150px', \n                                    minHeight: '35px',\n                                   // backgroundColor: red[500],\n                                    float: 'left',\n                                    margin: '15px',\n\n                                }}\n                               >\n                                Remove Head\n                             </button>\n                        </Grid>\n\n                      \n                </CardContent>\n                </Card>   \n                 <Grid item xs={12}>\n                     <div>\n                        {items}\n                     </div>\n                </Grid>      \n             </React.Fragment>\n            </div>\n        );\n    }\n\n}\n\n","/home/pius/dev/dsa/src/components/MainFeaturedPost.js",[],"/home/pius/dev/dsa/src/components/FeaturedPost.js",[],"/home/pius/dev/dsa/src/components/Sidebar.js",[],"/home/pius/dev/dsa/src/components/LinkedList.js",[],"/home/pius/dev/dsa/src/views/Fibonnacci.js",["447","448","449","450","451","452","453","454","455","456","457","458","459"],"import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n// import Header from '../components/Header';\nimport Input from '@material-ui/core/Input';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\n// import Footer from '../components/Footer';\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Chip from '@material-ui/core/Chip';\n\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport List_ from '../assets/fibseq.gif'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { Paper } from '@material-ui/core';\nimport Share from '../assets/Share.js';\nimport Popper from '@material-ui/core/Popper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '61.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n   gridSubsection: {\n    marginBottom: theme.spacing(1),\n  },\n  inputSmall:{\n    fontSize: '13px',\n    color: '#1b1f23',\n    border: '1px solid #cfd7de',\n    borderRadius: '5px',\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    \"&::after\": {\n        borderBottom: '1px solid #949494',\n    },\n  },\n  formLabel:{\n    fontSize: '13px',\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontWeight: '600',\n    marginBottom: theme.spacing(1),\n  },\n button: {\n    backgroundColor: red[500],\n    float: 'left',\n    margin: theme.spacing(2, 2, 1, 'auto'),\n  },\n  root_: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(0),\n    },\n  },\n   paper: {\n    padding: theme.spacing(2),\n  }\n}));\n\n\nexport default function Blog() {\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = React.useState(false);\n  const [ user_value, setValue ] = React.useState(\"\");\n  const [ render, set_render ] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleSubmit = (e) => {\n      let n1 = 0, n2 = 1, nextTerm;\n      if(localStorage.getItem('fib') == null){\n        localStorage.setItem('fib', \"[]\");\n      }\n      var old_data = JSON.parse(localStorage.getItem('fib'));\n\n      // console.log(\"fibonacci series upto\" , user_value,  \"terms\")\n      for (var i = 1; i <= user_value; i++){\n          // console.log(n1)\n          old_data.push(String(n1))\n          set_render(true)\n          // console.log(old_data)\n          nextTerm = n1+n2\n          n1 = n2;\n          n2 = nextTerm;\n      }\n\n      localStorage.setItem('fib', JSON.stringify(old_data));\n  }\n\n  const clear = (e) => {\n     localStorage.removeItem('fib')\n     set_render(false)\n  }\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n  const list_video_link = \"https://www.youtube.com/watch?v=mVO2dcuR7P0\"\n\n\n  React.useEffect(() => {\n    localStorage.removeItem('fib')\n  }, [])\n\n  return (\n    <React.Fragment>\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            F\n          </Avatar>\n        }\n        // action={\n        //   <IconButton aria-label=\"settings\">\n        //     <MoreVertIcon />\n        //   </IconButton>\n        // }\n        title=\"Fibonacci sequence\"\n        subheader=\"Returns a fibonnacci sequence upto a given number of terms\"\n      />\n      <CardMedia\n        className={classes.media}\n        image={List_}\n        title=\"Paella dish\"\n      />\n      <CardContent>\n    {/* James will put the content for fibonnacci */}\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              The Fibonacci sequence is a series of numbers where a number is the addition of the last two numbers, starting with 0, and 1. Written as a rule, the expression is: Xn = Xn-1 + Xn-2\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n\n          <LinkIcon onClick={handleClick} />\n          <Popper id={id} open={open} anchorEl={anchorEl}>\n            <Paper className={classes.paper}>\n             <Share \n               list_video_link={list_video_link}/>\n            </Paper> \n          </Popper>\n\n        </IconButton>\n\n        {/*<IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>*/}\n        <Button \n            variant=\"outlined\" \n            onClick={handleExpandClick}  \n            style={{ 'marginLeft': '80px', 'fontSize' : '10px'}}\n            color=\"primary\">\n            Try it out\n        </Button>\n       \n      </CardActions>\n      <br />\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n           <Grid item xs={12}>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n                <Grid item xs={8}>\n                  <FormLabel component=\"label\" className={classes.formLabel}>Number of terms</FormLabel>\n                  <Input\n                    className={classes.inputSmall}\n                    fullWidth\n                    placeholder=\"Add value\"\n                    disableUnderline\n                    name=\"value\"\n                    autoComplete=\"add-value\"\n                    onChange={(e) => {\n                      setValue(e.target.value)\n                    }}\n                    value={user_value}\n                    required\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n\n             <Button\n                variant=\"contained\"\n                //disabled={disabl_}\n                color=\"secondary\"\n                style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n                onClick={handleSubmit}\n                className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"Submit\"}</span>\n            </Button>\n            <Button\n                variant=\"contained\"\n                //disabled={disabl_}\n                color=\"secondary\"\n                style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n                onClick={clear}\n                className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"Clear\"}</span>\n            </Button>\n           \n          \n             <Grid item xs={12}>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n               \n                {\n                   render ? \n                    (\n                      <div>\n                        <Grid\n                          container\n                          spacing={2}\n                          className={classes.gridSubsection}\n                          style={{ 'marginTop' : '10px' }}\n                        >\n                         \n                            {\n                              JSON.parse(localStorage.getItem('fib')) ? (\n                                <div>\n                                     {JSON.parse(localStorage.getItem('fib')).map((value) => (\n                                           <Button variant=\"outlined\" color=\"primary\">\n                                             {value}\n                                          </Button>\n                                 ))}\n                                </div>):(\"\")\n                             }\n                        </Grid>\n                      </div>\n                    ) \n                    : null\n                  }\n                 \n              </Grid>\n            </Grid>\n\n        </CardContent>\n      </Collapse>\n    </Card>\n</React.Fragment>\n  );\n}\n\n","/home/pius/dev/dsa/src/views/Factorial.js",["460","461","462","463","464","465","466","467","468","469","470","471","472","473","474"],"import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n// import Header from '../components/Header';\nimport Input from '@material-ui/core/Input';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\n// import Footer from '../components/Footer';\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Chip from '@material-ui/core/Chip';\n\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport List_ from '../assets/fact.gif'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { Paper } from '@material-ui/core';\nimport Share from '../assets/Share.js';\nimport Popper from '@material-ui/core/Popper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '61.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n   gridSubsection: {\n    marginBottom: theme.spacing(1),\n  },\n  inputSmall:{\n    fontSize: '13px',\n    color: '#1b1f23',\n    border: '1px solid #cfd7de',\n    borderRadius: '5px',\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    \"&::after\": {\n        borderBottom: '1px solid #949494',\n    },\n  },\n  formLabel:{\n    fontSize: '13px',\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontWeight: '600',\n    marginBottom: theme.spacing(1),\n  },\n button: {\n    backgroundColor: red[500],\n    float: 'left',\n    margin: theme.spacing(2, 2, 1, 'auto'),\n  },\n  root_: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(0),\n    },\n  },\n   paper: {\n    padding: theme.spacing(2),\n  }\n}));\n\n\nexport default function Blog() {\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = React.useState(false);\n  const [ user_value, setValue ] = React.useState(\"\");\n  const [ render, set_render ] = React.useState(false);\n  const [ result, setResult ] = React.useState(null);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleSubmit = (e) => {\n\n      setResult(factorial(user_value))\n      set_render(true)\n\n       function factorial(n){\n            if(n == 0 || n == 1){\n                return 1;\n            }else{\n            return n*factorial(n - 1)\n        }\n        }\n  }\n\n  const clear = (e) => {\n     setResult(null)\n     set_render(false)\n  }\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n  const list_video_link = \"https://www.youtube.com/watch?v=0YENXAwrlSI\"\n\n\n  React.useEffect(() => {\n    localStorage.removeItem('fac')\n  }, [])\n\n  return (\n    <React.Fragment>\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            F\n          </Avatar>\n        }\n        // action={\n        //   <IconButton aria-label=\"settings\">\n        //     <MoreVertIcon />\n        //   </IconButton>\n        // }\n        title=\"Factorial\"\n        subheader=\"Returns the factorial of any number\"\n      />\n      <CardMedia\n        className={classes.media}\n        image={List_}\n        title=\"Paella dish\"\n      />\n      <CardContent>\n    {/* James will put the content for fibonnacci */}\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          The factorial of a number is the product of all the integers from 1 to that number.For example, the factorial of 6 is 1*2*3*4*5*6 = 720. Factorial is not defined for negative numbers, and the factorial of zero is one, 0! = 1.\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n\n          <LinkIcon onClick={handleClick} />\n          <Popper id={id} open={open} anchorEl={anchorEl}>\n            <Paper className={classes.paper}>\n             <Share \n               list_video_link={list_video_link}/>\n            </Paper> \n          </Popper>\n\n        </IconButton>\n\n        {/*<IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>*/}\n        <Button \n            variant=\"outlined\" \n            onClick={handleExpandClick}  \n            style={{ 'marginLeft': '80px', 'fontSize' : '10px'}}\n            color=\"primary\">\n            Try it out\n        </Button>\n       \n      </CardActions>\n      <br />\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n           <Grid item xs={12}>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n                <Grid item xs={8}>\n                  <FormLabel component=\"label\" className={classes.formLabel}>Number</FormLabel>\n                  <Input\n                    className={classes.inputSmall}\n                    fullWidth\n                    placeholder=\"Add value\"\n                    disableUnderline\n                    name=\"value\"\n                    autoComplete=\"add-value\"\n                    onChange={(e) => {\n                      setValue(e.target.value)\n                    }}\n                    value={user_value}\n                    required\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n\n             <Button\n                variant=\"contained\"\n                //disabled={disabl_}\n                color=\"secondary\"\n                style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n                onClick={handleSubmit}\n                className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"Submit\"}</span>\n            </Button>\n            <Button\n                variant=\"contained\"\n                //disabled={disabl_}\n                color=\"secondary\"\n                style={{maxWidth: '80px', maxHeight: '35px', minWidth: '80px', minHeight: '35px'}}\n                onClick={clear}\n                className={classes.button}\n              >\n              <span style={{fontWeight: 'bold'}}>{\"Clear\"}</span>\n            </Button>\n           \n          \n             <Grid item xs={12}>\n              <Grid\n                container\n                spacing={2}\n                className={classes.gridSubsection}\n              >\n               \n                {\n                   render ? \n                    (\n                      <div>\n                        <Grid\n                          container\n                          spacing={2}\n                          className={classes.gridSubsection}\n                          style={{ 'marginTop' : '10px' }}\n                        >\n                            <div>\n                            <FormLabel style={{ 'marginTop' : '10px' }} component=\"label\" className={classes.formLabel}>Factorial: </FormLabel>\n                                 <Button style={{ 'marginLeft' : '10px' }} variant=\"outlined\" color=\"primary\">\n                                   {result}\n                                </Button>\n                            </div>\n                        </Grid>\n                      </div>\n                    ) \n                    : null\n                  }\n                 \n              </Grid>\n            </Grid>\n\n        </CardContent>\n      </Collapse>\n    </Card>\n</React.Fragment>\n  );\n}\n\n","/home/pius/dev/dsa/src/assets/Share.js",["475","476","477","478","479","480","481","482","483","484","485","486","487","488"],"/home/pius/dev/dsa/src/views/Tree_impl.js",["489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504"],"import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Input from '@material-ui/core/Input';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Chip from '@material-ui/core/Chip';\n\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Tree_ from '../assets/tree.gif'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { Paper } from '@material-ui/core';\nimport Share from '../assets/Share.js';\nimport Tree from './Tree.js';\nimport Popper from '@material-ui/core/Popper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '68.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n   gridSubsection: {\n    marginBottom: theme.spacing(1),\n  },\n  inputSmall:{\n    fontSize: '13px',\n    color: '#1b1f23',\n    border: '1px solid #cfd7de',\n    borderRadius: '5px',\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    \"&::after\": {\n        borderBottom: '1px solid #949494',\n    },\n  },\n  formLabel:{\n    fontSize: '13px',\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontWeight: '600',\n    marginBottom: theme.spacing(1),\n  },\n button: {\n    backgroundColor: red[500],\n    float: 'left',\n    margin: theme.spacing(2, 2, 1, 'auto'),\n  },\n  root_: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(0),\n    },\n  },\n   paper: {\n    padding: theme.spacing(2),\n  }\n}));\n\n\nexport default function Blog() {\n  const classes = useStyles();\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popper' : undefined;\n  const stack_video_link = \"https://www.youtube.com/watch?v=1-l_UOFi1Xw\"\n\n\n  return (\n    <React.Fragment>\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            S\n          </Avatar>\n        }\n        // action={\n        //   <IconButton aria-label=\"settings\">\n        //     <MoreVertIcon />\n        //   </IconButton>\n        // }\n        title=\"Binary Tree Data structure\"\n        subheader=\"Methods: push(), pop()  Principle: LIFO (Last In First Out\"\n      />\n      <CardMedia\n        className={classes.media}\n        image={Tree_}\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        a binary tree is a tree data structure in which each node has at\n         most two children, which are referred to as the left child and the right child.\n         a binary search tree (BST), also called an ordered or sorted binary tree, is a\n          rooted binary tree whose internal nodes each store a key greater than all the keys\n          in the node's left subtree and less than those in its right subtree\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n\n          <LinkIcon onClick={handleClick} />\n          <Popper id={id} open={open} anchorEl={anchorEl}>\n            <Paper className={classes.paper}>\n             <Share \n               stack_video_link={stack_video_link}/>\n            </Paper> \n          </Popper>\n\n        </IconButton>\n        {/*<IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>*/}\n        <Button \n            variant=\"outlined\" \n            onClick={handleExpandClick}  \n            style={{ 'marginLeft': '150px', 'fontSize' : '10px'}}\n            color=\"primary\">\n            Try it out\n        </Button>\n       \n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n\n        <CardContent>\n           <Tree />\n        </CardContent>\n        \n      </Collapse>\n    </Card>\n</React.Fragment>\n  );\n}\n\n","/home/pius/dev/dsa/src/views/Tree.js",["505","506"],"import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport {options} from './config'\nimport {TreeGraph} from \"./TreeGraph\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainGrid: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\n\nexport default function Blog() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n          <TreeGraph options={options}/>\n      </Container>\n    </React.Fragment>\n  );\n}\n ","/home/pius/dev/dsa/src/views/TreeGraph.js",[],"/home/pius/dev/dsa/src/views/config.js",[],"/home/pius/dev/dsa/src/views/BinaryTree.js",[],"/home/pius/dev/dsa/src/views/InputForm.js",["507"],"import React, {useState} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Form from 'react-bootstrap/Form'\nimport FormLabel from \"react-bootstrap/FormLabel\";\nimport Col from \"react-bootstrap/Col\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Input from '@material-ui/core/Input';\n\nimport { red } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '68.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n   gridSubsection: {\n    marginBottom: theme.spacing(1),\n  },\n  inputSmall:{\n    fontSize: '13px',\n    color: '#1b1f23',\n    border: '1px solid #cfd7de',\n    borderRadius: '5px',\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    \"&::after\": {\n        borderBottom: '1px solid #949494',\n    },\n  },\n  formLabel:{\n    fontSize: '13px',\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontWeight: '600',\n    marginBottom: theme.spacing(1),\n  },\n button: {\n    backgroundColor: red[500],\n    float: 'left',\n    margin: theme.spacing(2, 2, 1, 'auto'),\n  },\n  root_: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(0),\n    },\n  },\n   paper: {\n    padding: theme.spacing(2),\n  }\n}));\n\nconst InputForm = (props) => {\n\n    const classes = useStyles();\n\n    let {tree} = props;\n    let [enabled, setEnabled] = useState(false);\n\n    const handleInput = (event) => {\n        event.preventDefault();\n        tree.insert(event.target.input.value.toLowerCase());\n        event.target.input.value = '';\n        props.update(tree.toGraph());\n        setEnabled(false);\n    };\n\n    const handleChange = (event) => {\n        event.preventDefault();\n        let value = event.target.value.toLowerCase();\n        setEnabled(value.length !== 0);\n    };\n\n    return (\n        <div className={\"pt-5\"}>\n            <Form onSubmit={e => handleInput(e)}>\n                <FormLabel htmlFor={\"input\"}>Enter word or number</FormLabel>\n                <Form.Row>\n                    <Col>\n                \n                   <Input\n                        className={classes.inputSmall}\n                        type={\"text\"} id=\"input\"\n                        placeholder={\"add value\"}\n                        onChange={handleChange}\n                        fullWidth\n                        disableUnderline\n                        name=\"value\"\n                        autoComplete=\"add-value\"\n                        required\n                  />\n                    </Col>\n                     <br />\n                    <Col>\n                        <input type={\"submit\"} style={{ \"marginTop\" : '20px' }} className={\"btn btn-primary add-btn\"} value={\"add\"} disabled={!enabled}/>\n                    </Col>\n                     <br />\n                </Form.Row>\n            </Form>\n        </div>\n    );\n};\n\nexport {InputForm}\n","/home/pius/dev/dsa/src/tower/Towerr.js",[],"/home/pius/dev/dsa/src/tower/Tower.js",[],"/home/pius/dev/dsa/src/tower/Ring.js",[],"/home/pius/dev/dsa/src/components/HeaderLinks.js",[],"/home/pius/dev/dsa/src/sorting/More_Sorting.js",["508","509"],"// Core App Imports\nimport React, {useState, useEffect} from 'react';\n\n// Custom Components\nimport Header from './components/Header.js';\nimport DataSortingWindow from './components/DataSortingWindow.js';\nimport AlgoDescriptionContainer from './components/AlgoDescriptionContainer.js';\nimport SortingStepControls from './components/SortingStepControls.js';\n\n// Algorithms\nimport {bubbleSortInfo, BubbleSort} from './Algorithms/bubbleSort.ts';\nimport {selectionSortInfo, SelectionSort} from './Algorithms/selectionSort.ts';\nimport {insertionSortInfo, InsertionSort} from './Algorithms/insertionSort.ts';\nimport {quickSortInfo, QuickSortMain} from './Algorithms/quickSort.ts';\nimport {mergeSortInfo, MergeSortMain} from './Algorithms/mergeSort.ts';\nimport {heapSortInfo} from './Algorithms/heapSort.js';\n\n// Material ui\n// import indigo from '@material-ui/core/colors/indigo';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\n\n// Utility\nimport {generateRandomUniqueUnorderedList} from './helperFunctions.ts'; // still works!\n\n// Application CONSTANTS\nconst ALGOINFO = [\n    bubbleSortInfo,\n    selectionSortInfo,\n    insertionSortInfo,\n    quickSortInfo,\n    mergeSortInfo,\n    // heapSortInfo\n]\n\nconst ALGORITHMS = [\n    BubbleSort,\n    SelectionSort,\n    InsertionSort,\n    QuickSortMain,\n    MergeSortMain\n]\n\nconst ALGONAMES = ALGOINFO.map(algo => algo.name);\nconst DATASIZES = ['5', '10', '25', '50', '100'];\nconst SPEEDS = ['0.25', '0.5', '1.0', '2.0', '4.0'];\n\nconst COLORKEYS = [{\n        key: 'Unsorted', \n        color: `${lightBlue[\"600\"]}`\n    }, {\n        key: 'Comparing',\n        color: 'yellow'\n    }, {\n        key: 'Swapped',\n        color: 'red'\n    }, {\n        key: 'Sorted',\n        color: `${green[\"600\"]}`\n    }\n];\n\n\n// Controls the program, grabs the algorithm and data size that are selected, runs/stops the algorithm, sends data points to child component, renders relevant data \nconst App = () => {\n    const styles = {\n        overlay: { // need this AND <style> in index.html to make the div FULL screen!!\n            backgroundColor: `${grey[\"900\"]}`,\n            position: 'fixed',\n            width: '100%',\n            height: '100%',\n            display: 'grid'\n        }, \n        // For DESKTOP and TABLET\n        layout: {\n            display: 'grid',\n            gridTemplateColumns: '5fr 2fr',\n            gridGap: '50px',\n            height: '500px',\n            padding: '0px 50px 50px 50px',\n        },\n        sortWindowAndControls: {\n            display: 'grid',\n            gridTemplateRows: '10fr 1fr',\n            height: '525px',\n            width: '100%',\n            borderRadius: '10px',\n            padding: '15px',\n            backgroundColor: `${grey[\"800\"]}`,\n            color: `${green[\"600\"]}`,\n        },\n        // for MOBILE\n        layoutMobile: {\n            display: 'grid',\n            gridTemplateColumns: '1fr',\n            gridGap: '10px',\n            height: '100%',\n            padding: '30px 15px 15px 15px',\n            overflowY: 'scroll' // need this for mobile scrolling\n        },\n        sortWindowAndControlsMobile: {\n            display: 'grid',\n            gridTemplateRows: '8fr 1fr',\n            gridGap: '10px',\n            height: '480px',\n            borderRadius: '10px',\n            padding: '15px',\n            backgroundColor: `${grey[\"800\"]}`,\n            color: `${green[\"600\"]}`,\n        }\n    }\n\n    const [algorithmInfo, setAlgorithmInfo] = useState({\n        name: '',\n        description: '',\n        performance: {\n            best: '',\n            average: '',\n            worst: ''\n        },\n        index: null\n    })\n    const [dataSize, setDataSize] = useState('10');\n    const [data, setData] = useState(null);\n    const [barWidth, setBarWidth] = useState('');\n    const [tracker, setTracker] = useState({\n        steps: []\n    })\n    let [trackerIndex, setTrackerIndex] = useState(0);\n    const [sortingData, setSortingData] = useState({\n        array: [],\n        comparing: [],\n        sortedIndices: [],\n        swapped: []\n    }); // the data that's initially a deep copy of data then iterates through tracker.steps - this is what's sent to the data sorting window\n    const [sortedData, setSortedData] = useState(null); // sorted array stored as soon as sorting algo is selected ahead of time to check\n    const [sortSpeed, setSortSpeed] = useState(SPEEDS[2]);\n    const [windowSize, setWindowSize] = useState(window.innerWidth);\n\n    useEffect(() => {\n        setDataSize('10');\n        setData(generateRandomUniqueUnorderedList(10));\n        setSortingData(null);\n        setWindowSize();\n    }, []);\n\n    useEffect(() => {\n        setBarWidth(getBarWidth(dataSize));\n    }, [dataSize])\n\n    window.addEventListener('resize', () => setWindowSize(window.innerWidth));\n\n    function getBarWidth() {\n        switch(parseInt(dataSize)) {\n            case 5:\n                return '20%';\n            case 10:\n                return '10%';\n            case 25:\n                return '4%';\n            case 50: \n                return '2%';\n            case 100:\n                return '1%';\n            default: \n                return '5%';\n        }\n    }\n    \n    /* functions for managing the tracker */\n    function run() {\n        const trackerStepSnippetFromIndex = tracker.steps.filter((step, index) => index >= trackerIndex )\n\n        // console.log(trackerIndex);\n        // console.log(trackerStepSnippetFromIndex);\n\n        trackerStepSnippetFromIndex.forEach((step, index) => {\n            setTimeout(() => {\n                setSortingData(step);\n                setTrackerIndex(trackerIndex++);\n                if (index === trackerStepSnippetFromIndex.length-1) {\n                    setTrackerIndex(trackerIndex++);\n                }\n            }, (150 * (1/sortSpeed)) * index);\n        });\n        \n        setTrackerIndex(tracker.steps.length);\n    }\n\n    function speedSelected(index) {\n        setSortSpeed(SPEEDS[index]);\n    }\n\n\n    function handlePreviousStep() {\n        if (sortingData !== data) {\n            setTrackerIndex(trackerIndex - 1);\n            setSortingData(tracker.steps[trackerIndex - 1]);\n        }\n    }\n\n    function handleNextStep() {\n        if (sortingData !== sortedData) {\n            setTrackerIndex(trackerIndex + 1);\n            setSortingData(tracker.steps[trackerIndex + 1]);\n        }\n    }\n    \n    /* functions for algorithm selection, element size, shuffling, and execution */\n    function handleAlgorithmSelection(index) {\n        setAlgorithmInfo(ALGOINFO[index]);\n\n        getSpecificAlgorithmTracker(index, sortingData? sortingData.array : data); // for some reason, without this it will send the sorted list - so when you click the same alogirthm twice it solves it automatically. needs investigation but this fixes it\n\n    }\n\n    function handleListSizeSelection(index) {\n        // console.log('Data size changed - data size: ', DATASIZES[index]);\n        setSortingData(null); // sorting data is only sent to child once the algorithm runs and we have the tracker\n\n        setDataSize(DATASIZES[index]);\n        setBarWidth(getBarWidth(DATASIZES[index]));\n        const newList = generateRandomUniqueUnorderedList(parseInt(DATASIZES[index]));\n        setTrackerIndex(0);\n        \n        setData(newList);\n        if (algorithmInfo.index !== null) {\n            getSpecificAlgorithmTracker(algorithmInfo.index, newList);\n        }\n    }\n\n    function shuffleDataRequest() {\n        setSortingData(null);\n        setTrackerIndex(0);\n        const newList = generateRandomUniqueUnorderedList(parseInt(dataSize));\n        setData(newList);\n        if (algorithmInfo.index !== null) {\n            getSpecificAlgorithmTracker(algorithmInfo.index, newList);\n        }\n    }\n\n    // The steps for an algorithm are stored in a tracker object which has an array of steps that are iterated to display the algorithm visually\n    // need to pass the new unique array to this function to get a tracker of the updated list since JS is asynchornous - it doesnt grab the setData() value from the functions before it so it calculates the tracker for the list before the size was changd/shuffle button was clicked\n    function getSpecificAlgorithmTracker(index, duplicateListBecauseJsIsAsynchronous) {\n        // console.log(index);\n        let tracker;\n        \n        if (algorithmInfo.index === null || index !== algorithmInfo.index) { // either first time selecting an algorithm or selecting a new one\n            tracker = ALGORITHMS[index](duplicateListBecauseJsIsAsynchronous); \n        } else { // in the case that the same algorithhm is selected\n            tracker = ALGORITHMS[algorithmInfo.index](duplicateListBecauseJsIsAsynchronous); \n        }\n\n        setTracker(tracker);\n        // console.log(`NEW Tracker generated using ${ALGOINFO[index].name}`,tracker);\n\n        setSortedData(tracker.steps[tracker.steps.length-1].array);\n        setSortingData(tracker.steps[0]);\n    }\n\n\n    return (\n        <div style={styles.overlay}>\n\n            <Header \n                algorithm={algorithmInfo.name} \n                listOfAlgorithms={ALGONAMES} \n                algorithmSelected={handleAlgorithmSelection}\n                dataSize={dataSize}\n                listOfDataSizes={DATASIZES}\n                dataSizeSelected={handleListSizeSelection}\n                shuffleData={shuffleDataRequest}\n            />\n\n            <div className=\"layout\" style={windowSize < 770 ? styles.layoutMobile : styles.layout}>\n                <div className=\"sort-window-and-controls\" style={windowSize < 770 ? styles.sortWindowAndControlsMobile : styles.sortWindowAndControls}>\n                    <DataSortingWindow \n                        data={sortingData? sortingData.array : data} \n                        comparing={sortingData? sortingData.comparing : null}\n                        swapped={sortingData? sortingData.swapped : null}\n                        sorted={sortingData? sortingData.sortedIndices : null}\n                        barWidth={barWidth}\n                    />\n\n                    <SortingStepControls \n                        handleNextButton={handleNextStep}\n                        handlePrevButton={handlePreviousStep}\n                        sortButton={run}\n                        colorKeys={COLORKEYS} // set to algorithm specific color key! For quick and prob heap sort. \n                        trackerSize={tracker.steps.length}\n                        trackerStep={trackerIndex}\n                        speed={sortSpeed}\n                        listOfSpeeds={SPEEDS}\n                        handleSpeedSelected={speedSelected}\n                    />\n                </div>\n                \n                <AlgoDescriptionContainer\n                    algoName={algorithmInfo.name}\n                    algoDescription={algorithmInfo.description}\n                    average={algorithmInfo.performance.average}\n                    best={algorithmInfo.performance.best}\n                    worst={algorithmInfo.performance.worst}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default App;","/home/pius/dev/dsa/src/sorting/helperFunctions.ts",[],["510","511"],"/home/pius/dev/dsa/src/sorting/components/Header.js",[],"/home/pius/dev/dsa/src/sorting/components/DataSortingWindow.js",[],"/home/pius/dev/dsa/src/sorting/components/AlgoDescriptionContainer.js",["512","513"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n      minWidth: 250,\n      overflowY: 'scroll'\n    },\n    title: {\n      fontSize: 16,\n    },\n    pos: {\n    //   marginBottom: 12,\n    },\n  });\n\nconst AlgoDescriptionContainer = ({algoName, algoDescription, average, best, worst}) => {\n    // const styles = {\n    //     container: {\n    //         display: 'grid',\n    //         // gridGap: '3px',\n    //         font: 'Roboto'\n    //     }\n    // }\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n        <CardContent>\n            <Typography variant=\"h4\" component=\"h2\">\n                {algoName? algoName : 'Select Algorithm'}\n                <br />\n            </Typography>\n            <br/>\n            <Typography variant=\"body2\" component=\"p\">\n                {algoDescription? algoDescription : 'You must select an algorithm in order to visualize how it sorts the data'}\n                <br />\n            </Typography>\n            <br />\n            <Typography variant=\"h6\" component=\"h4\" >\n                Performance\n                <br />\n            </Typography>\n            <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr'}}>\n                <Typography variant=\"body2\" component=\"p\">\n                    Best\n                    <br />\n                    Average\n                    <br />\n                    Worst \n                </Typography>\n\n                <Typography variant=\"body2\" component=\"p\" style={{fontStyle: 'italics'}}>\n                    {best}\n                    <br />\n                    {average}\n                    <br />\n                    {worst}\n                </Typography>\n            </div>\n            \n        </CardContent>\n\n        {/* <CardActions>\n            <Button size=\"small\" href=\"wikipedia.com\">Learn More</Button>\n        </CardActions> */}\n\n        </Card>\n    )\n}\n\nexport default AlgoDescriptionContainer;","/home/pius/dev/dsa/src/sorting/components/SortingStepControls.js",[],"/home/pius/dev/dsa/src/sorting/Algorithms/selectionSort.ts",[],"/home/pius/dev/dsa/src/sorting/Algorithms/mergeSort.ts",[],"/home/pius/dev/dsa/src/sorting/Algorithms/heapSort.js",[],"/home/pius/dev/dsa/src/sorting/Algorithms/insertionSort.ts",[],"/home/pius/dev/dsa/src/sorting/Algorithms/bubbleSort.ts",[],"/home/pius/dev/dsa/src/sorting/Algorithms/quickSort.ts",[],"/home/pius/dev/dsa/src/sorting/components/ColorKeyItem.js",[],"/home/pius/dev/dsa/src/sorting/Algorithms/helperFunctions.ts",[],"/home/pius/dev/dsa/src/sorting/components/DataBar/DataBar.js",[],{"ruleId":"514","replacedBy":"515"},{"ruleId":"516","replacedBy":"517"},{"ruleId":"518","severity":1,"message":"519","line":7,"column":8,"nodeType":"520","messageId":"521","endLine":7,"endColumn":13},{"ruleId":"518","severity":1,"message":"522","line":8,"column":8,"nodeType":"520","messageId":"521","endLine":8,"endColumn":17},{"ruleId":"518","severity":1,"message":"523","line":9,"column":8,"nodeType":"520","messageId":"521","endLine":9,"endColumn":24},{"ruleId":"518","severity":1,"message":"524","line":10,"column":8,"nodeType":"520","messageId":"521","endLine":10,"endColumn":18},{"ruleId":"518","severity":1,"message":"525","line":11,"column":8,"nodeType":"520","messageId":"521","endLine":11,"endColumn":19},{"ruleId":"518","severity":1,"message":"526","line":13,"column":8,"nodeType":"520","messageId":"521","endLine":13,"endColumn":14},{"ruleId":"518","severity":1,"message":"527","line":14,"column":8,"nodeType":"520","messageId":"521","endLine":14,"endColumn":18},{"ruleId":"518","severity":1,"message":"528","line":15,"column":8,"nodeType":"520","messageId":"521","endLine":15,"endColumn":16},{"ruleId":"518","severity":1,"message":"529","line":16,"column":8,"nodeType":"520","messageId":"521","endLine":16,"endColumn":17},{"ruleId":"518","severity":1,"message":"530","line":17,"column":10,"nodeType":"520","messageId":"521","endLine":17,"endColumn":15},{"ruleId":"518","severity":1,"message":"531","line":17,"column":17,"nodeType":"520","messageId":"521","endLine":17,"endColumn":27},{"ruleId":"518","severity":1,"message":"532","line":18,"column":8,"nodeType":"520","messageId":"521","endLine":18,"endColumn":12},{"ruleId":"518","severity":1,"message":"533","line":20,"column":8,"nodeType":"520","messageId":"521","endLine":20,"endColumn":12},{"ruleId":"518","severity":1,"message":"534","line":21,"column":8,"nodeType":"520","messageId":"521","endLine":21,"endColumn":12},{"ruleId":"518","severity":1,"message":"535","line":22,"column":8,"nodeType":"520","messageId":"521","endLine":22,"endColumn":18},{"ruleId":"518","severity":1,"message":"536","line":23,"column":8,"nodeType":"520","messageId":"521","endLine":23,"endColumn":17},{"ruleId":"518","severity":1,"message":"537","line":24,"column":8,"nodeType":"520","messageId":"521","endLine":24,"endColumn":19},{"ruleId":"518","severity":1,"message":"538","line":25,"column":8,"nodeType":"520","messageId":"521","endLine":25,"endColumn":19},{"ruleId":"518","severity":1,"message":"539","line":26,"column":8,"nodeType":"520","messageId":"521","endLine":26,"endColumn":14},{"ruleId":"518","severity":1,"message":"540","line":29,"column":8,"nodeType":"520","messageId":"521","endLine":29,"endColumn":20},{"ruleId":"518","severity":1,"message":"541","line":30,"column":8,"nodeType":"520","messageId":"521","endLine":30,"endColumn":17},{"ruleId":"518","severity":1,"message":"542","line":31,"column":8,"nodeType":"520","messageId":"521","endLine":31,"endColumn":22},{"ruleId":"518","severity":1,"message":"543","line":32,"column":8,"nodeType":"520","messageId":"521","endLine":32,"endColumn":20},{"ruleId":"518","severity":1,"message":"544","line":33,"column":8,"nodeType":"520","messageId":"521","endLine":33,"endColumn":14},{"ruleId":"518","severity":1,"message":"545","line":34,"column":8,"nodeType":"520","messageId":"521","endLine":34,"endColumn":19},{"ruleId":"518","severity":1,"message":"546","line":35,"column":8,"nodeType":"520","messageId":"521","endLine":35,"endColumn":16},{"ruleId":"518","severity":1,"message":"547","line":37,"column":10,"nodeType":"520","messageId":"521","endLine":37,"endColumn":15},{"ruleId":"518","severity":1,"message":"548","line":38,"column":8,"nodeType":"520","messageId":"521","endLine":38,"endColumn":13},{"ruleId":"518","severity":1,"message":"549","line":39,"column":8,"nodeType":"520","messageId":"521","endLine":39,"endColumn":14},{"ruleId":"518","severity":1,"message":"550","line":116,"column":9,"nodeType":"520","messageId":"521","endLine":116,"endColumn":16},{"ruleId":"551","severity":1,"message":"552","line":133,"column":16,"nodeType":"553","messageId":"554","endLine":133,"endColumn":28},{"ruleId":"551","severity":1,"message":"555","line":136,"column":16,"nodeType":"553","messageId":"554","endLine":136,"endColumn":28},{"ruleId":"551","severity":1,"message":"556","line":145,"column":17,"nodeType":"553","messageId":"554","endLine":145,"endColumn":27},{"ruleId":"551","severity":1,"message":"557","line":151,"column":17,"nodeType":"553","messageId":"554","endLine":151,"endColumn":37},{"ruleId":"551","severity":1,"message":"558","line":166,"column":17,"nodeType":"553","messageId":"554","endLine":166,"endColumn":31},{"ruleId":"518","severity":1,"message":"559","line":14,"column":8,"nodeType":"520","messageId":"521","endLine":14,"endColumn":15},{"ruleId":"518","severity":1,"message":"560","line":76,"column":7,"nodeType":"520","messageId":"521","endLine":76,"endColumn":14},{"ruleId":"518","severity":1,"message":"561","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":19},{"ruleId":"518","severity":1,"message":"562","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":17},{"ruleId":"518","severity":1,"message":"525","line":10,"column":8,"nodeType":"520","messageId":"521","endLine":10,"endColumn":19},{"ruleId":"518","severity":1,"message":"531","line":15,"column":17,"nodeType":"520","messageId":"521","endLine":15,"endColumn":27},{"ruleId":"518","severity":1,"message":"532","line":16,"column":8,"nodeType":"520","messageId":"521","endLine":16,"endColumn":12},{"ruleId":"518","severity":1,"message":"533","line":18,"column":8,"nodeType":"520","messageId":"521","endLine":18,"endColumn":12},{"ruleId":"518","severity":1,"message":"540","line":27,"column":8,"nodeType":"520","messageId":"521","endLine":27,"endColumn":20},{"ruleId":"518","severity":1,"message":"541","line":28,"column":8,"nodeType":"520","messageId":"521","endLine":28,"endColumn":17},{"ruleId":"518","severity":1,"message":"542","line":29,"column":8,"nodeType":"520","messageId":"521","endLine":29,"endColumn":22},{"ruleId":"518","severity":1,"message":"543","line":30,"column":8,"nodeType":"520","messageId":"521","endLine":30,"endColumn":20},{"ruleId":"518","severity":1,"message":"563","line":128,"column":11,"nodeType":"520","messageId":"521","endLine":128,"endColumn":20},{"ruleId":"518","severity":1,"message":"564","line":128,"column":22,"nodeType":"520","messageId":"521","endLine":128,"endColumn":30},{"ruleId":"518","severity":1,"message":"565","line":129,"column":11,"nodeType":"520","messageId":"521","endLine":129,"endColumn":16},{"ruleId":"518","severity":1,"message":"566","line":129,"column":18,"nodeType":"520","messageId":"521","endLine":129,"endColumn":26},{"ruleId":"518","severity":1,"message":"567","line":141,"column":3,"nodeType":"520","messageId":"521","endLine":141,"endColumn":9},{"ruleId":"518","severity":1,"message":"568","line":180,"column":9,"nodeType":"520","messageId":"521","endLine":180,"endColumn":17},{"ruleId":"518","severity":1,"message":"561","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":19},{"ruleId":"518","severity":1,"message":"562","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":17},{"ruleId":"518","severity":1,"message":"569","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":14},{"ruleId":"518","severity":1,"message":"523","line":9,"column":8,"nodeType":"520","messageId":"521","endLine":9,"endColumn":24},{"ruleId":"518","severity":1,"message":"525","line":11,"column":8,"nodeType":"520","messageId":"521","endLine":11,"endColumn":19},{"ruleId":"518","severity":1,"message":"570","line":12,"column":8,"nodeType":"520","messageId":"521","endLine":12,"endColumn":14},{"ruleId":"518","severity":1,"message":"531","line":17,"column":17,"nodeType":"520","messageId":"521","endLine":17,"endColumn":27},{"ruleId":"518","severity":1,"message":"532","line":18,"column":8,"nodeType":"520","messageId":"521","endLine":18,"endColumn":12},{"ruleId":"518","severity":1,"message":"533","line":20,"column":8,"nodeType":"520","messageId":"521","endLine":20,"endColumn":12},{"ruleId":"518","severity":1,"message":"540","line":29,"column":8,"nodeType":"520","messageId":"521","endLine":29,"endColumn":20},{"ruleId":"518","severity":1,"message":"541","line":30,"column":8,"nodeType":"520","messageId":"521","endLine":30,"endColumn":17},{"ruleId":"518","severity":1,"message":"542","line":31,"column":8,"nodeType":"520","messageId":"521","endLine":31,"endColumn":22},{"ruleId":"518","severity":1,"message":"543","line":32,"column":8,"nodeType":"520","messageId":"521","endLine":32,"endColumn":20},{"ruleId":"518","severity":1,"message":"563","line":126,"column":11,"nodeType":"520","messageId":"521","endLine":126,"endColumn":20},{"ruleId":"518","severity":1,"message":"564","line":126,"column":22,"nodeType":"520","messageId":"521","endLine":126,"endColumn":30},{"ruleId":"518","severity":1,"message":"565","line":127,"column":11,"nodeType":"520","messageId":"521","endLine":127,"endColumn":16},{"ruleId":"518","severity":1,"message":"566","line":127,"column":18,"nodeType":"520","messageId":"521","endLine":127,"endColumn":26},{"ruleId":"518","severity":1,"message":"567","line":134,"column":3,"nodeType":"520","messageId":"521","endLine":134,"endColumn":9},{"ruleId":"518","severity":1,"message":"561","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":19},{"ruleId":"518","severity":1,"message":"562","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":17},{"ruleId":"518","severity":1,"message":"569","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":14},{"ruleId":"518","severity":1,"message":"523","line":9,"column":8,"nodeType":"520","messageId":"521","endLine":9,"endColumn":24},{"ruleId":"518","severity":1,"message":"525","line":11,"column":8,"nodeType":"520","messageId":"521","endLine":11,"endColumn":19},{"ruleId":"518","severity":1,"message":"570","line":12,"column":8,"nodeType":"520","messageId":"521","endLine":12,"endColumn":14},{"ruleId":"518","severity":1,"message":"531","line":17,"column":17,"nodeType":"520","messageId":"521","endLine":17,"endColumn":27},{"ruleId":"518","severity":1,"message":"532","line":18,"column":8,"nodeType":"520","messageId":"521","endLine":18,"endColumn":12},{"ruleId":"518","severity":1,"message":"533","line":20,"column":8,"nodeType":"520","messageId":"521","endLine":20,"endColumn":12},{"ruleId":"518","severity":1,"message":"540","line":29,"column":8,"nodeType":"520","messageId":"521","endLine":29,"endColumn":20},{"ruleId":"518","severity":1,"message":"541","line":30,"column":8,"nodeType":"520","messageId":"521","endLine":30,"endColumn":17},{"ruleId":"518","severity":1,"message":"542","line":31,"column":8,"nodeType":"520","messageId":"521","endLine":31,"endColumn":22},{"ruleId":"518","severity":1,"message":"543","line":32,"column":8,"nodeType":"520","messageId":"521","endLine":32,"endColumn":20},{"ruleId":"518","severity":1,"message":"545","line":34,"column":8,"nodeType":"520","messageId":"521","endLine":34,"endColumn":19},{"ruleId":"518","severity":1,"message":"563","line":126,"column":11,"nodeType":"520","messageId":"521","endLine":126,"endColumn":20},{"ruleId":"518","severity":1,"message":"564","line":126,"column":22,"nodeType":"520","messageId":"521","endLine":126,"endColumn":30},{"ruleId":"518","severity":1,"message":"565","line":127,"column":11,"nodeType":"520","messageId":"521","endLine":127,"endColumn":16},{"ruleId":"518","severity":1,"message":"566","line":127,"column":18,"nodeType":"520","messageId":"521","endLine":127,"endColumn":26},{"ruleId":"518","severity":1,"message":"571","line":134,"column":3,"nodeType":"520","messageId":"521","endLine":134,"endColumn":8},{"ruleId":"518","severity":1,"message":"572","line":187,"column":9,"nodeType":"520","messageId":"521","endLine":187,"endColumn":21},{"ruleId":"518","severity":1,"message":"573","line":196,"column":7,"nodeType":"520","messageId":"521","endLine":196,"endColumn":19},{"ruleId":"518","severity":1,"message":"574","line":218,"column":10,"nodeType":"520","messageId":"521","endLine":218,"endColumn":23},{"ruleId":"518","severity":1,"message":"575","line":237,"column":12,"nodeType":"520","messageId":"521","endLine":237,"endColumn":25},{"ruleId":"518","severity":1,"message":"576","line":273,"column":7,"nodeType":"520","messageId":"521","endLine":273,"endColumn":12},{"ruleId":"518","severity":1,"message":"561","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":19},{"ruleId":"518","severity":1,"message":"562","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":17},{"ruleId":"518","severity":1,"message":"569","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":14},{"ruleId":"518","severity":1,"message":"523","line":9,"column":8,"nodeType":"520","messageId":"521","endLine":9,"endColumn":24},{"ruleId":"518","severity":1,"message":"525","line":11,"column":8,"nodeType":"520","messageId":"521","endLine":11,"endColumn":19},{"ruleId":"518","severity":1,"message":"570","line":12,"column":8,"nodeType":"520","messageId":"521","endLine":12,"endColumn":14},{"ruleId":"518","severity":1,"message":"531","line":17,"column":17,"nodeType":"520","messageId":"521","endLine":17,"endColumn":27},{"ruleId":"518","severity":1,"message":"532","line":18,"column":8,"nodeType":"520","messageId":"521","endLine":18,"endColumn":12},{"ruleId":"518","severity":1,"message":"533","line":20,"column":8,"nodeType":"520","messageId":"521","endLine":20,"endColumn":12},{"ruleId":"518","severity":1,"message":"540","line":29,"column":8,"nodeType":"520","messageId":"521","endLine":29,"endColumn":20},{"ruleId":"518","severity":1,"message":"541","line":30,"column":8,"nodeType":"520","messageId":"521","endLine":30,"endColumn":17},{"ruleId":"518","severity":1,"message":"542","line":31,"column":8,"nodeType":"520","messageId":"521","endLine":31,"endColumn":22},{"ruleId":"518","severity":1,"message":"543","line":32,"column":8,"nodeType":"520","messageId":"521","endLine":32,"endColumn":20},{"ruleId":"518","severity":1,"message":"545","line":34,"column":8,"nodeType":"520","messageId":"521","endLine":34,"endColumn":19},{"ruleId":"518","severity":1,"message":"563","line":126,"column":11,"nodeType":"520","messageId":"521","endLine":126,"endColumn":20},{"ruleId":"518","severity":1,"message":"564","line":126,"column":22,"nodeType":"520","messageId":"521","endLine":126,"endColumn":30},{"ruleId":"518","severity":1,"message":"565","line":127,"column":11,"nodeType":"520","messageId":"521","endLine":127,"endColumn":16},{"ruleId":"518","severity":1,"message":"566","line":127,"column":18,"nodeType":"520","messageId":"521","endLine":127,"endColumn":26},{"ruleId":"518","severity":1,"message":"577","line":134,"column":3,"nodeType":"520","messageId":"521","endLine":134,"endColumn":9},{"ruleId":"578","severity":1,"message":"579","line":134,"column":12,"nodeType":"580","messageId":"581","endLine":134,"endColumn":23},{"ruleId":"518","severity":1,"message":"572","line":187,"column":9,"nodeType":"520","messageId":"521","endLine":187,"endColumn":21},{"ruleId":"518","severity":1,"message":"573","line":196,"column":7,"nodeType":"520","messageId":"521","endLine":196,"endColumn":19},{"ruleId":"518","severity":1,"message":"574","line":218,"column":10,"nodeType":"520","messageId":"521","endLine":218,"endColumn":23},{"ruleId":"518","severity":1,"message":"575","line":237,"column":12,"nodeType":"520","messageId":"521","endLine":237,"endColumn":25},{"ruleId":"518","severity":1,"message":"576","line":273,"column":5,"nodeType":"520","messageId":"521","endLine":273,"endColumn":10},{"ruleId":"518","severity":1,"message":"561","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":19},{"ruleId":"518","severity":1,"message":"562","line":7,"column":8,"nodeType":"520","messageId":"521","endLine":7,"endColumn":17},{"ruleId":"518","severity":1,"message":"569","line":8,"column":8,"nodeType":"520","messageId":"521","endLine":8,"endColumn":14},{"ruleId":"518","severity":1,"message":"523","line":11,"column":8,"nodeType":"520","messageId":"521","endLine":11,"endColumn":24},{"ruleId":"518","severity":1,"message":"525","line":13,"column":8,"nodeType":"520","messageId":"521","endLine":13,"endColumn":19},{"ruleId":"518","severity":1,"message":"570","line":14,"column":8,"nodeType":"520","messageId":"521","endLine":14,"endColumn":14},{"ruleId":"518","severity":1,"message":"531","line":19,"column":17,"nodeType":"520","messageId":"521","endLine":19,"endColumn":27},{"ruleId":"518","severity":1,"message":"532","line":20,"column":8,"nodeType":"520","messageId":"521","endLine":20,"endColumn":12},{"ruleId":"518","severity":1,"message":"533","line":22,"column":8,"nodeType":"520","messageId":"521","endLine":22,"endColumn":12},{"ruleId":"518","severity":1,"message":"540","line":31,"column":8,"nodeType":"520","messageId":"521","endLine":31,"endColumn":20},{"ruleId":"518","severity":1,"message":"541","line":32,"column":8,"nodeType":"520","messageId":"521","endLine":32,"endColumn":17},{"ruleId":"518","severity":1,"message":"542","line":33,"column":8,"nodeType":"520","messageId":"521","endLine":33,"endColumn":22},{"ruleId":"518","severity":1,"message":"543","line":34,"column":8,"nodeType":"520","messageId":"521","endLine":34,"endColumn":20},{"ruleId":"518","severity":1,"message":"545","line":36,"column":8,"nodeType":"520","messageId":"521","endLine":36,"endColumn":19},{"ruleId":"518","severity":1,"message":"561","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":19},{"ruleId":"518","severity":1,"message":"562","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":17},{"ruleId":"518","severity":1,"message":"569","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":14},{"ruleId":"518","severity":1,"message":"523","line":9,"column":8,"nodeType":"520","messageId":"521","endLine":9,"endColumn":24},{"ruleId":"518","severity":1,"message":"525","line":11,"column":8,"nodeType":"520","messageId":"521","endLine":11,"endColumn":19},{"ruleId":"518","severity":1,"message":"570","line":12,"column":8,"nodeType":"520","messageId":"521","endLine":12,"endColumn":14},{"ruleId":"518","severity":1,"message":"531","line":17,"column":17,"nodeType":"520","messageId":"521","endLine":17,"endColumn":27},{"ruleId":"518","severity":1,"message":"532","line":18,"column":8,"nodeType":"520","messageId":"521","endLine":18,"endColumn":12},{"ruleId":"518","severity":1,"message":"533","line":20,"column":8,"nodeType":"520","messageId":"521","endLine":20,"endColumn":12},{"ruleId":"518","severity":1,"message":"540","line":29,"column":8,"nodeType":"520","messageId":"521","endLine":29,"endColumn":20},{"ruleId":"518","severity":1,"message":"541","line":30,"column":8,"nodeType":"520","messageId":"521","endLine":30,"endColumn":17},{"ruleId":"518","severity":1,"message":"542","line":31,"column":8,"nodeType":"520","messageId":"521","endLine":31,"endColumn":22},{"ruleId":"518","severity":1,"message":"543","line":32,"column":8,"nodeType":"520","messageId":"521","endLine":32,"endColumn":20},{"ruleId":"518","severity":1,"message":"545","line":34,"column":8,"nodeType":"520","messageId":"521","endLine":34,"endColumn":19},{"ruleId":"518","severity":1,"message":"561","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":19},{"ruleId":"518","severity":1,"message":"562","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":17},{"ruleId":"518","severity":1,"message":"569","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":14},{"ruleId":"518","severity":1,"message":"523","line":9,"column":8,"nodeType":"520","messageId":"521","endLine":9,"endColumn":24},{"ruleId":"518","severity":1,"message":"525","line":11,"column":8,"nodeType":"520","messageId":"521","endLine":11,"endColumn":19},{"ruleId":"518","severity":1,"message":"570","line":12,"column":8,"nodeType":"520","messageId":"521","endLine":12,"endColumn":14},{"ruleId":"518","severity":1,"message":"531","line":17,"column":17,"nodeType":"520","messageId":"521","endLine":17,"endColumn":27},{"ruleId":"518","severity":1,"message":"532","line":18,"column":8,"nodeType":"520","messageId":"521","endLine":18,"endColumn":12},{"ruleId":"518","severity":1,"message":"533","line":20,"column":8,"nodeType":"520","messageId":"521","endLine":20,"endColumn":12},{"ruleId":"518","severity":1,"message":"540","line":29,"column":8,"nodeType":"520","messageId":"521","endLine":29,"endColumn":20},{"ruleId":"518","severity":1,"message":"541","line":30,"column":8,"nodeType":"520","messageId":"521","endLine":30,"endColumn":17},{"ruleId":"518","severity":1,"message":"542","line":31,"column":8,"nodeType":"520","messageId":"521","endLine":31,"endColumn":22},{"ruleId":"518","severity":1,"message":"543","line":32,"column":8,"nodeType":"520","messageId":"521","endLine":32,"endColumn":20},{"ruleId":"518","severity":1,"message":"545","line":34,"column":8,"nodeType":"520","messageId":"521","endLine":34,"endColumn":19},{"ruleId":"518","severity":1,"message":"582","line":3,"column":3,"nodeType":"520","messageId":"521","endLine":3,"endColumn":19},{"ruleId":"518","severity":1,"message":"583","line":4,"column":3,"nodeType":"520","messageId":"521","endLine":4,"endColumn":22},{"ruleId":"518","severity":1,"message":"584","line":5,"column":3,"nodeType":"520","messageId":"521","endLine":5,"endColumn":21},{"ruleId":"518","severity":1,"message":"585","line":6,"column":3,"nodeType":"520","messageId":"521","endLine":6,"endColumn":22},{"ruleId":"518","severity":1,"message":"586","line":10,"column":3,"nodeType":"520","messageId":"521","endLine":10,"endColumn":12},{"ruleId":"518","severity":1,"message":"587","line":11,"column":3,"nodeType":"520","messageId":"521","endLine":11,"endColumn":15},{"ruleId":"518","severity":1,"message":"588","line":12,"column":3,"nodeType":"520","messageId":"521","endLine":12,"endColumn":14},{"ruleId":"518","severity":1,"message":"589","line":13,"column":3,"nodeType":"520","messageId":"521","endLine":13,"endColumn":15},{"ruleId":"518","severity":1,"message":"590","line":19,"column":8,"nodeType":"520","messageId":"521","endLine":19,"endColumn":20},{"ruleId":"518","severity":1,"message":"591","line":20,"column":8,"nodeType":"520","messageId":"521","endLine":20,"endColumn":20},{"ruleId":"518","severity":1,"message":"592","line":21,"column":8,"nodeType":"520","messageId":"521","endLine":21,"endColumn":16},{"ruleId":"518","severity":1,"message":"593","line":22,"column":8,"nodeType":"520","messageId":"521","endLine":22,"endColumn":17},{"ruleId":"518","severity":1,"message":"594","line":24,"column":10,"nodeType":"520","messageId":"521","endLine":24,"endColumn":18},{"ruleId":"518","severity":1,"message":"595","line":49,"column":9,"nodeType":"520","messageId":"521","endLine":49,"endColumn":17},{"ruleId":"518","severity":1,"message":"561","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":19},{"ruleId":"518","severity":1,"message":"562","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":17},{"ruleId":"518","severity":1,"message":"569","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":14},{"ruleId":"518","severity":1,"message":"523","line":9,"column":8,"nodeType":"520","messageId":"521","endLine":9,"endColumn":24},{"ruleId":"518","severity":1,"message":"525","line":11,"column":8,"nodeType":"520","messageId":"521","endLine":11,"endColumn":19},{"ruleId":"518","severity":1,"message":"570","line":12,"column":8,"nodeType":"520","messageId":"521","endLine":12,"endColumn":14},{"ruleId":"518","severity":1,"message":"531","line":17,"column":17,"nodeType":"520","messageId":"521","endLine":17,"endColumn":27},{"ruleId":"518","severity":1,"message":"532","line":18,"column":8,"nodeType":"520","messageId":"521","endLine":18,"endColumn":12},{"ruleId":"518","severity":1,"message":"533","line":20,"column":8,"nodeType":"520","messageId":"521","endLine":20,"endColumn":12},{"ruleId":"518","severity":1,"message":"540","line":29,"column":8,"nodeType":"520","messageId":"521","endLine":29,"endColumn":20},{"ruleId":"518","severity":1,"message":"541","line":30,"column":8,"nodeType":"520","messageId":"521","endLine":30,"endColumn":17},{"ruleId":"518","severity":1,"message":"542","line":31,"column":8,"nodeType":"520","messageId":"521","endLine":31,"endColumn":22},{"ruleId":"518","severity":1,"message":"543","line":32,"column":8,"nodeType":"520","messageId":"521","endLine":32,"endColumn":20},{"ruleId":"518","severity":1,"message":"545","line":34,"column":8,"nodeType":"520","messageId":"521","endLine":34,"endColumn":19},{"ruleId":"518","severity":1,"message":"596","line":42,"column":8,"nodeType":"520","messageId":"521","endLine":42,"endColumn":16},{"ruleId":"518","severity":1,"message":"576","line":133,"column":7,"nodeType":"520","messageId":"521","endLine":133,"endColumn":12},{"ruleId":"518","severity":1,"message":"597","line":2,"column":8,"nodeType":"520","messageId":"521","endLine":2,"endColumn":17},{"ruleId":"518","severity":1,"message":"526","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":14},{"ruleId":"518","severity":1,"message":"561","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":19},{"ruleId":"518","severity":1,"message":"562","line":7,"column":8,"nodeType":"520","messageId":"521","endLine":7,"endColumn":17},{"ruleId":"518","severity":1,"message":"569","line":8,"column":8,"nodeType":"520","messageId":"521","endLine":8,"endColumn":14},{"ruleId":"518","severity":1,"message":"519","line":9,"column":8,"nodeType":"520","messageId":"521","endLine":9,"endColumn":13},{"ruleId":"518","severity":1,"message":"522","line":10,"column":8,"nodeType":"520","messageId":"521","endLine":10,"endColumn":17},{"ruleId":"518","severity":1,"message":"523","line":11,"column":8,"nodeType":"520","messageId":"521","endLine":11,"endColumn":24},{"ruleId":"518","severity":1,"message":"525","line":13,"column":8,"nodeType":"520","messageId":"521","endLine":13,"endColumn":19},{"ruleId":"518","severity":1,"message":"570","line":14,"column":8,"nodeType":"520","messageId":"521","endLine":14,"endColumn":14},{"ruleId":"518","severity":1,"message":"527","line":16,"column":8,"nodeType":"520","messageId":"521","endLine":16,"endColumn":18},{"ruleId":"518","severity":1,"message":"528","line":17,"column":8,"nodeType":"520","messageId":"521","endLine":17,"endColumn":16},{"ruleId":"518","severity":1,"message":"529","line":18,"column":8,"nodeType":"520","messageId":"521","endLine":18,"endColumn":17},{"ruleId":"518","severity":1,"message":"530","line":19,"column":10,"nodeType":"520","messageId":"521","endLine":19,"endColumn":15},{"ruleId":"518","severity":1,"message":"531","line":19,"column":17,"nodeType":"520","messageId":"521","endLine":19,"endColumn":27},{"ruleId":"518","severity":1,"message":"532","line":20,"column":8,"nodeType":"520","messageId":"521","endLine":20,"endColumn":12},{"ruleId":"518","severity":1,"message":"533","line":22,"column":8,"nodeType":"520","messageId":"521","endLine":22,"endColumn":12},{"ruleId":"518","severity":1,"message":"538","line":27,"column":8,"nodeType":"520","messageId":"521","endLine":27,"endColumn":19},{"ruleId":"518","severity":1,"message":"540","line":31,"column":8,"nodeType":"520","messageId":"521","endLine":31,"endColumn":20},{"ruleId":"518","severity":1,"message":"541","line":32,"column":8,"nodeType":"520","messageId":"521","endLine":32,"endColumn":17},{"ruleId":"518","severity":1,"message":"542","line":33,"column":8,"nodeType":"520","messageId":"521","endLine":33,"endColumn":22},{"ruleId":"518","severity":1,"message":"543","line":34,"column":8,"nodeType":"520","messageId":"521","endLine":34,"endColumn":20},{"ruleId":"518","severity":1,"message":"598","line":35,"column":8,"nodeType":"520","messageId":"521","endLine":35,"endColumn":14},{"ruleId":"518","severity":1,"message":"546","line":38,"column":8,"nodeType":"520","messageId":"521","endLine":38,"endColumn":16},{"ruleId":"518","severity":1,"message":"547","line":40,"column":10,"nodeType":"520","messageId":"521","endLine":40,"endColumn":15},{"ruleId":"518","severity":1,"message":"548","line":41,"column":8,"nodeType":"520","messageId":"521","endLine":41,"endColumn":13},{"ruleId":"518","severity":1,"message":"549","line":42,"column":8,"nodeType":"520","messageId":"521","endLine":42,"endColumn":14},{"ruleId":"518","severity":1,"message":"599","line":159,"column":13,"nodeType":"520","messageId":"521","endLine":159,"endColumn":14},{"ruleId":"518","severity":1,"message":"561","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":19},{"ruleId":"518","severity":1,"message":"562","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":17},{"ruleId":"518","severity":1,"message":"525","line":10,"column":8,"nodeType":"520","messageId":"521","endLine":10,"endColumn":19},{"ruleId":"518","severity":1,"message":"529","line":15,"column":8,"nodeType":"520","messageId":"521","endLine":15,"endColumn":17},{"ruleId":"518","severity":1,"message":"530","line":16,"column":10,"nodeType":"520","messageId":"521","endLine":16,"endColumn":15},{"ruleId":"518","severity":1,"message":"531","line":16,"column":17,"nodeType":"520","messageId":"521","endLine":16,"endColumn":27},{"ruleId":"518","severity":1,"message":"532","line":17,"column":8,"nodeType":"520","messageId":"521","endLine":17,"endColumn":12},{"ruleId":"518","severity":1,"message":"533","line":19,"column":8,"nodeType":"520","messageId":"521","endLine":19,"endColumn":12},{"ruleId":"518","severity":1,"message":"540","line":28,"column":8,"nodeType":"520","messageId":"521","endLine":28,"endColumn":20},{"ruleId":"518","severity":1,"message":"541","line":29,"column":8,"nodeType":"520","messageId":"521","endLine":29,"endColumn":17},{"ruleId":"518","severity":1,"message":"542","line":30,"column":8,"nodeType":"520","messageId":"521","endLine":30,"endColumn":22},{"ruleId":"518","severity":1,"message":"543","line":31,"column":8,"nodeType":"520","messageId":"521","endLine":31,"endColumn":20},{"ruleId":"518","severity":1,"message":"545","line":33,"column":8,"nodeType":"520","messageId":"521","endLine":33,"endColumn":19},{"ruleId":"518","severity":1,"message":"561","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":19},{"ruleId":"518","severity":1,"message":"562","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":17},{"ruleId":"518","severity":1,"message":"525","line":10,"column":8,"nodeType":"520","messageId":"521","endLine":10,"endColumn":19},{"ruleId":"518","severity":1,"message":"529","line":15,"column":8,"nodeType":"520","messageId":"521","endLine":15,"endColumn":17},{"ruleId":"518","severity":1,"message":"530","line":16,"column":10,"nodeType":"520","messageId":"521","endLine":16,"endColumn":15},{"ruleId":"518","severity":1,"message":"531","line":16,"column":17,"nodeType":"520","messageId":"521","endLine":16,"endColumn":27},{"ruleId":"518","severity":1,"message":"532","line":17,"column":8,"nodeType":"520","messageId":"521","endLine":17,"endColumn":12},{"ruleId":"518","severity":1,"message":"533","line":19,"column":8,"nodeType":"520","messageId":"521","endLine":19,"endColumn":12},{"ruleId":"518","severity":1,"message":"540","line":28,"column":8,"nodeType":"520","messageId":"521","endLine":28,"endColumn":20},{"ruleId":"518","severity":1,"message":"541","line":29,"column":8,"nodeType":"520","messageId":"521","endLine":29,"endColumn":17},{"ruleId":"518","severity":1,"message":"542","line":30,"column":8,"nodeType":"520","messageId":"521","endLine":30,"endColumn":22},{"ruleId":"518","severity":1,"message":"543","line":31,"column":8,"nodeType":"520","messageId":"521","endLine":31,"endColumn":20},{"ruleId":"518","severity":1,"message":"545","line":33,"column":8,"nodeType":"520","messageId":"521","endLine":33,"endColumn":19},{"ruleId":"600","severity":1,"message":"601","line":116,"column":18,"nodeType":"602","messageId":"603","endLine":116,"endColumn":20},{"ruleId":"600","severity":1,"message":"601","line":116,"column":28,"nodeType":"602","messageId":"603","endLine":116,"endColumn":30},{"ruleId":"518","severity":1,"message":"582","line":3,"column":3,"nodeType":"520","messageId":"521","endLine":3,"endColumn":19},{"ruleId":"518","severity":1,"message":"583","line":4,"column":3,"nodeType":"520","messageId":"521","endLine":4,"endColumn":22},{"ruleId":"518","severity":1,"message":"584","line":5,"column":3,"nodeType":"520","messageId":"521","endLine":5,"endColumn":21},{"ruleId":"518","severity":1,"message":"585","line":6,"column":3,"nodeType":"520","messageId":"521","endLine":6,"endColumn":22},{"ruleId":"518","severity":1,"message":"586","line":10,"column":3,"nodeType":"520","messageId":"521","endLine":10,"endColumn":12},{"ruleId":"518","severity":1,"message":"587","line":11,"column":3,"nodeType":"520","messageId":"521","endLine":11,"endColumn":15},{"ruleId":"518","severity":1,"message":"588","line":12,"column":3,"nodeType":"520","messageId":"521","endLine":12,"endColumn":14},{"ruleId":"518","severity":1,"message":"589","line":13,"column":3,"nodeType":"520","messageId":"521","endLine":13,"endColumn":15},{"ruleId":"518","severity":1,"message":"590","line":19,"column":8,"nodeType":"520","messageId":"521","endLine":19,"endColumn":20},{"ruleId":"518","severity":1,"message":"591","line":20,"column":8,"nodeType":"520","messageId":"521","endLine":20,"endColumn":20},{"ruleId":"518","severity":1,"message":"592","line":21,"column":8,"nodeType":"520","messageId":"521","endLine":21,"endColumn":16},{"ruleId":"518","severity":1,"message":"593","line":22,"column":8,"nodeType":"520","messageId":"521","endLine":22,"endColumn":17},{"ruleId":"518","severity":1,"message":"594","line":24,"column":10,"nodeType":"520","messageId":"521","endLine":24,"endColumn":18},{"ruleId":"518","severity":1,"message":"595","line":49,"column":9,"nodeType":"520","messageId":"521","endLine":49,"endColumn":17},{"ruleId":"518","severity":1,"message":"561","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":19},{"ruleId":"518","severity":1,"message":"604","line":4,"column":8,"nodeType":"520","messageId":"521","endLine":4,"endColumn":12},{"ruleId":"518","severity":1,"message":"562","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":17},{"ruleId":"518","severity":1,"message":"519","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":13},{"ruleId":"518","severity":1,"message":"522","line":7,"column":8,"nodeType":"520","messageId":"521","endLine":7,"endColumn":17},{"ruleId":"518","severity":1,"message":"525","line":9,"column":8,"nodeType":"520","messageId":"521","endLine":9,"endColumn":19},{"ruleId":"518","severity":1,"message":"529","line":13,"column":8,"nodeType":"520","messageId":"521","endLine":13,"endColumn":17},{"ruleId":"518","severity":1,"message":"530","line":14,"column":10,"nodeType":"520","messageId":"521","endLine":14,"endColumn":15},{"ruleId":"518","severity":1,"message":"531","line":14,"column":17,"nodeType":"520","messageId":"521","endLine":14,"endColumn":27},{"ruleId":"518","severity":1,"message":"532","line":15,"column":8,"nodeType":"520","messageId":"521","endLine":15,"endColumn":12},{"ruleId":"518","severity":1,"message":"533","line":17,"column":8,"nodeType":"520","messageId":"521","endLine":17,"endColumn":12},{"ruleId":"518","severity":1,"message":"540","line":26,"column":8,"nodeType":"520","messageId":"521","endLine":26,"endColumn":20},{"ruleId":"518","severity":1,"message":"541","line":27,"column":8,"nodeType":"520","messageId":"521","endLine":27,"endColumn":17},{"ruleId":"518","severity":1,"message":"542","line":28,"column":8,"nodeType":"520","messageId":"521","endLine":28,"endColumn":22},{"ruleId":"518","severity":1,"message":"543","line":29,"column":8,"nodeType":"520","messageId":"521","endLine":29,"endColumn":20},{"ruleId":"518","severity":1,"message":"545","line":31,"column":8,"nodeType":"520","messageId":"521","endLine":31,"endColumn":19},{"ruleId":"518","severity":1,"message":"604","line":4,"column":8,"nodeType":"520","messageId":"521","endLine":4,"endColumn":12},{"ruleId":"518","severity":1,"message":"550","line":17,"column":9,"nodeType":"520","messageId":"521","endLine":17,"endColumn":16},{"ruleId":"518","severity":1,"message":"526","line":7,"column":8,"nodeType":"520","messageId":"521","endLine":7,"endColumn":14},{"ruleId":"518","severity":1,"message":"605","line":16,"column":9,"nodeType":"520","messageId":"521","endLine":16,"endColumn":21},{"ruleId":"606","severity":1,"message":"607","line":150,"column":8,"nodeType":"608","endLine":150,"endColumn":18,"suggestions":"609"},{"ruleId":"514","replacedBy":"515"},{"ruleId":"516","replacedBy":"517"},{"ruleId":"518","severity":1,"message":"538","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":19},{"ruleId":"518","severity":1,"message":"526","line":7,"column":8,"nodeType":"520","messageId":"521","endLine":7,"endColumn":14},"no-native-reassign",["610"],"no-negated-in-lhs",["611"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'FormLabel' is defined but never used.","'AccordionSummary' is defined but never used.","'Typography' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'Collapse' is defined but never used.","'CloseIcon' is defined but never used.","'Alert' is defined but never used.","'AlertTitle' is defined but never used.","'Chip' is defined but never used.","'clsx' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'Avatar' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'Stack_' is defined but never used.","'ButtonGroup' is defined but never used.","'LinkIcon' is defined but never used.","'Paper' is defined but never used.","'Share' is defined but never used.","'Popper' is defined but never used.","'classes' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Stack_DS must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Queue_DS must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Array_ must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Searching_Binary must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Tree_impl must be in PascalCase or SCREAMING_SNAKE_CASE","'Sidebar' is defined but never used.","'sidebar' is assigned a value but never used.","'CssBaseline' is defined but never used.","'Container' is defined but never used.","'stack_def' is assigned a value but never used.","'setStack' is assigned a value but never used.","'first' is assigned a value but never used.","'setFirst' is assigned a value but never used.","'stack_' is assigned a value but never used.","'new_data' is assigned a value but never used.","'Header' is defined but never used.","'Footer' is defined but never used.","'list_' is assigned a value but never used.","'linearSearch' is assigned a value but never used.","'binarySearch' is assigned a value but never used.","'selectionSort' is defined but never used.","'insertionSort' is defined but never used.","'items' is assigned a value but never used.","'array_' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'EmailShareButton' is defined but never used.","'FacebookShareButton' is defined but never used.","'TwitterShareButton' is defined but never used.","'WhatsappShareButton' is defined but never used.","'EmailIcon' is defined but never used.","'FacebookIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'WhatsappIcon' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'StarIcon' is defined but never used.","'TextField' is defined but never used.","'Redirect' is defined but never used.","'shareUrl' is assigned a value but never used.","'Stack_DS' is defined but never used.","'PropTypes' is defined but never used.","'Queue_' is defined but never used.","'i' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Grid' is defined but never used.","'heapSortInfo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBarWidth'. Either include it or remove the dependency array.","ArrayExpression",["612"],"no-global-assign","no-unsafe-negation",{"desc":"613","fix":"614"},"Update the dependencies array to be: [dataSize, getBarWidth]",{"range":"615","text":"616"},[4797,4807],"[dataSize, getBarWidth]"]